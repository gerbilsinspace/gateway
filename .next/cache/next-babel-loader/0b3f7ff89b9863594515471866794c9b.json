{
  "ast": null,
  "code": "import _slicedToArray from \"@babel/runtime/helpers/esm/slicedToArray\";\nimport _taggedTemplateLiteral from \"@babel/runtime/helpers/esm/taggedTemplateLiteral\";\nvar __jsx = React.createElement;\n\nfunction _templateObject3() {\n  var data = _taggedTemplateLiteral([\"\\n  background-color: \", \";\\n  color: white;\\n  padding: 20px;\\n  height: 400px;\\n  margin-bottom: \", \";\\n\\n  @media screen and (min-width: 991px) {\\n    width: calc(40% - 20px);\\n    margin-right: 20px;\\n    float: left;\\n    height: 460px;\\n  }\\n\\n  a {\\n    color: white;\\n  }\\n\"]);\n\n  _templateObject3 = function _templateObject3() {\n    return data;\n  };\n\n  return data;\n}\n\nfunction _templateObject2() {\n  var data = _taggedTemplateLiteral([\"\\n  @media screen and (min-width: 991px) {\\n    width: calc(60% - 20px);\\n    float: left;\\n    margin-right: 20px;\\n  }\\n\"]);\n\n  _templateObject2 = function _templateObject2() {\n    return data;\n  };\n\n  return data;\n}\n\nfunction _templateObject() {\n  var data = _taggedTemplateLiteral([\"\\n  padding: 20px;\\n\"]);\n\n  _templateObject = function _templateObject() {\n    return data;\n  };\n\n  return data;\n}\n\nimport React, { useState, useEffect } from 'react';\nimport styled from 'styled-components';\nimport Head from 'next/head';\nimport Footer from '../templates/Footer';\nimport Header from '../templates/Header';\nimport Container from '../components/Container';\nimport HeaderContainer from '../components/HeaderContainer';\nimport Image from '../components/Image';\nimport ImageWrapper from '../components/ImageWrapper';\nimport CallToActions from '../components/CallToActions';\nimport Quotes from '../components/Quotes';\nimport HomeDeck from '../components/HomeDeck';\nimport SimpleEvents from '../components/SimpleEvents';\nimport Clearfix from '../components/Clearfix';\nimport { getData, getFullUrl, changeColourToHex, getMenuColour, getAllColours } from '../helpers';\nvar Padding = styled.div(_templateObject());\nvar StyledImageWrapper = styled(ImageWrapper)(_templateObject2());\n\nvar twitter = function twitter() {\n  return {\n    __html: 'twitter'\n  };\n};\n\nvar TwitterWrapper = styled.div(_templateObject3(), function (props) {\n  return props.colour;\n}, function (props) {\n  return props.mobileMarginBottom || '20px';\n});\n\nvar Home = function Home() {\n  var _useState = useState(true),\n      loading = _useState[0],\n      setLoading = _useState[1];\n\n  var _useState2 = useState(''),\n      title = _useState2[0],\n      setTitle = _useState2[1];\n\n  var _useState3 = useState(''),\n      image = _useState3[0],\n      setImage = _useState3[1];\n\n  var _useState4 = useState(''),\n      deckImage = _useState4[0],\n      setDeckImage = _useState4[1];\n\n  var _useState5 = useState(''),\n      deckColour = _useState5[0],\n      setDeckColour = _useState5[1];\n\n  var _useState6 = useState(''),\n      deckText = _useState6[0],\n      setDeckText = _useState6[1];\n\n  var _useState7 = useState(''),\n      colour = _useState7[0],\n      setColour = _useState7[1];\n\n  var _useState8 = useState(''),\n      colourHex = _useState8[0],\n      setColourHex = _useState8[1];\n\n  var _useState9 = useState(''),\n      colourHexLight = _useState9[0],\n      setColourHexLight = _useState9[1];\n\n  var _useState10 = useState([]),\n      cta = _useState10[0],\n      setCta = _useState10[1];\n\n  var _useState11 = useState(''),\n      eventsImage = _useState11[0],\n      setEventsImage = _useState11[1];\n\n  var _useState12 = useState(''),\n      twitterImage = _useState12[0],\n      setTwitterImage = _useState12[1];\n\n  var _useState13 = useState([]),\n      quotes = _useState13[0],\n      setQuotes = _useState13[1];\n\n  useEffect(function () {\n    getData('data/homepage.json').then(function (data) {\n      setTitle(data.header.title);\n      setImage(data.header.image);\n      setDeckImage(getFullUrl(data.deck.image));\n      setDeckColour(changeColourToHex(data.deck.colour));\n      setDeckText(data.deck.text);\n\n      var _getAllColours = getAllColours(getMenuColour(data)),\n          _getAllColours2 = _slicedToArray(_getAllColours, 3),\n          colour = _getAllColours2[0],\n          colourHex = _getAllColours2[1],\n          colourHexLight = _getAllColours2[2];\n\n      setColour(colour);\n      setColourHex(colourHex);\n      setColourHexLight(colourHexLight);\n      setEventsImage(getFullUrl(data.eventsImage));\n      setTwitterImage(getFullUrl(data.twitterImage));\n      setQuotes(data.quotes);\n      setCta(data.cta.map(function (item) {\n        item.image = getFullUrl(item.image);\n        item.colour = changeColourToHex(item.colour);\n        return item;\n      }));\n      setLoading(false);\n    });\n  }, []);\n  if (loading) return __jsx(\"div\", null);\n\n  var _require = require('react-twitter-embed'),\n      TwitterTimelineEmbed = _require.TwitterTimelineEmbed;\n\n  return __jsx(React.Fragment, null, __jsx(Head, null, __jsx(\"title\", {\n    key: \"title\"\n  }, \"Gateway Church, York\")), __jsx(Header, {\n    colour: colour,\n    colourHex: colourHex,\n    colourHexLight: colourHexLight,\n    title: title,\n    image: image,\n    Header: HeaderContainer\n  }), __jsx(\"main\", null, __jsx(CallToActions, {\n    cta: cta\n  }), __jsx(Padding, null, __jsx(Quotes, {\n    quotes: quotes\n  }), __jsx(HomeDeck, {\n    colour: deckColour,\n    text: deckText,\n    image: deckImage\n  }), __jsx(Container, null, __jsx(StyledImageWrapper, {\n    mobileHeight: \"400px\",\n    mobileMarginBottom: \"0\"\n  }, __jsx(Image, {\n    url: eventsImage\n  })), __jsx(SimpleEvents, {\n    colour: colourHex,\n    colourLight: colourHexLight\n  }), __jsx(Clearfix, null)), __jsx(Container, null, __jsx(TwitterWrapper, {\n    colour: colourHex\n  }, __jsx(\"a\", {\n    className: \"twitter-timeline\",\n    \"data-height\": \"400\",\n    href: \"https://twitter.com/gatewayyork?ref_src=twsrc%5Etfw\"\n  }, \"Tweets by gatewayyork\"), __jsx(\"script\", {\n    dangerouslySetInnerHTML: twitter(),\n    async: true,\n    src: \"https://platform.twitter.com/widgets.js\",\n    charSet: \"utf-8\"\n  })), __jsx(ImageWrapper, {\n    mobileHeight: \"400px\"\n  }, __jsx(Image, {\n    url: twitterImage\n  }))))), __jsx(Footer, null));\n};\n\nexport default Home;",
  "map": {
    "version": 3,
    "sources": ["/home/joe/dev/gateway/pages/index.js"],
    "names": [
      "React",
      "useState",
      "useEffect",
      "styled",
      "Head",
      "Footer",
      "Header",
      "Container",
      "HeaderContainer",
      "Image",
      "ImageWrapper",
      "CallToActions",
      "Quotes",
      "HomeDeck",
      "SimpleEvents",
      "Clearfix",
      "getData",
      "getFullUrl",
      "changeColourToHex",
      "getMenuColour",
      "getAllColours",
      "Padding",
      "div",
      "StyledImageWrapper",
      "twitter",
      "__html",
      "TwitterWrapper",
      "props",
      "colour",
      "mobileMarginBottom",
      "Home",
      "loading",
      "setLoading",
      "title",
      "setTitle",
      "image",
      "setImage",
      "deckImage",
      "setDeckImage",
      "deckColour",
      "setDeckColour",
      "deckText",
      "setDeckText",
      "setColour",
      "colourHex",
      "setColourHex",
      "colourHexLight",
      "setColourHexLight",
      "cta",
      "setCta",
      "eventsImage",
      "setEventsImage",
      "twitterImage",
      "setTwitterImage",
      "quotes",
      "setQuotes",
      "then",
      "data",
      "header",
      "deck",
      "text",
      "map",
      "item",
      "require",
      "TwitterTimelineEmbed"
    ],
    "mappings": "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",
    "sourcesContent": [
      "import React, {useState, useEffect} from 'react';\nimport styled from 'styled-components';\nimport Head from 'next/head';\n\nimport Footer from '../templates/Footer';\nimport Header from '../templates/Header';\nimport Container from '../components/Container';\nimport HeaderContainer from '../components/HeaderContainer';\nimport Image from '../components/Image';\nimport ImageWrapper from '../components/ImageWrapper';\nimport CallToActions from '../components/CallToActions';\nimport Quotes from '../components/Quotes';\nimport HomeDeck from '../components/HomeDeck';\nimport SimpleEvents from '../components/SimpleEvents';\nimport Clearfix from '../components/Clearfix';\nimport {\n  getData,\n  getFullUrl,\n  changeColourToHex,\n  getMenuColour,\n  getAllColours\n} from '../helpers';\n\nconst Padding = styled.div`\n  padding: 20px;\n`;\n\nconst StyledImageWrapper = styled(ImageWrapper)`\n  @media screen and (min-width: 991px) {\n    width: calc(60% - 20px);\n    float: left;\n    margin-right: 20px;\n  }\n`;\n\nconst twitter = () => ({__html: 'twitter'});\n\nconst TwitterWrapper = styled.div`\n  background-color: ${props => props.colour};\n  color: white;\n  padding: 20px;\n  height: 400px;\n  margin-bottom: ${props => props.mobileMarginBottom || '20px'};\n\n  @media screen and (min-width: 991px) {\n    width: calc(40% - 20px);\n    margin-right: 20px;\n    float: left;\n    height: 460px;\n  }\n\n  a {\n    color: white;\n  }\n`;\n\nconst Home = () => {\n  const [loading, setLoading] = useState(true);\n  const [title, setTitle] = useState('');\n  const [image, setImage] = useState('');\n  const [deckImage, setDeckImage] = useState('');\n  const [deckColour, setDeckColour] = useState('');\n  const [deckText, setDeckText] = useState('');\n  const [colour, setColour] = useState('');\n  const [colourHex, setColourHex] = useState('');\n  const [colourHexLight, setColourHexLight] = useState('');\n  const [cta, setCta] = useState([]);\n  const [eventsImage, setEventsImage] = useState('');\n  const [twitterImage, setTwitterImage] = useState('');\n  const [quotes, setQuotes] = useState([]);\n\n  useEffect(() => {\n    getData('data/homepage.json').then(data => {\n      setTitle(data.header.title);\n      setImage(data.header.image);\n      setDeckImage(getFullUrl(data.deck.image));\n      setDeckColour(changeColourToHex(data.deck.colour));\n      setDeckText(data.deck.text);\n      const [colour, colourHex, colourHexLight] = getAllColours(\n        getMenuColour(data)\n      );\n      setColour(colour);\n      setColourHex(colourHex);\n      setColourHexLight(colourHexLight);\n      setEventsImage(getFullUrl(data.eventsImage));\n      setTwitterImage(getFullUrl(data.twitterImage));\n      setQuotes(data.quotes);\n\n      setCta(\n        data.cta.map(item => {\n          item.image = getFullUrl(item.image);\n          item.colour = changeColourToHex(item.colour);\n\n          return item;\n        })\n      );\n      setLoading(false);\n    });\n  }, []);\n\n  if (loading) return <div />;\n\n  const {TwitterTimelineEmbed} = require('react-twitter-embed');\n\n  return (\n    <React.Fragment>\n      <Head>\n        <title key=\"title\">Gateway Church, York</title>\n      </Head>\n      <Header\n        colour={colour}\n        colourHex={colourHex}\n        colourHexLight={colourHexLight}\n        title={title}\n        image={image}\n        Header={HeaderContainer}\n      />\n      <main>\n        <CallToActions cta={cta} />\n        <Padding>\n          <Quotes quotes={quotes} />\n          <HomeDeck colour={deckColour} text={deckText} image={deckImage} />\n          <Container>\n            <StyledImageWrapper mobileHeight=\"400px\" mobileMarginBottom=\"0\">\n              <Image url={eventsImage} />\n            </StyledImageWrapper>\n            <SimpleEvents colour={colourHex} colourLight={colourHexLight} />\n            <Clearfix />\n          </Container>\n          <Container>\n            <TwitterWrapper colour={colourHex}>\n              <a\n                className=\"twitter-timeline\"\n                data-height=\"400\"\n                href=\"https://twitter.com/gatewayyork?ref_src=twsrc%5Etfw\"\n              >\n                Tweets by gatewayyork\n              </a>\n\n              <script\n                dangerouslySetInnerHTML={twitter()}\n                async\n                src=\"https://platform.twitter.com/widgets.js\"\n                charSet=\"utf-8\"\n              />\n            </TwitterWrapper>\n            <ImageWrapper mobileHeight=\"400px\">\n              <Image url={twitterImage} />\n            </ImageWrapper>\n          </Container>\n        </Padding>\n      </main>\n      <Footer />\n    </React.Fragment>\n  );\n};\n\nexport default Home;\n"
    ]
  },
  "metadata": {},
  "sourceType": "module"
}

{
  "ast": null,
  "code": "import _slicedToArray from \"@babel/runtime/helpers/esm/slicedToArray\";\nimport _taggedTemplateLiteral from \"@babel/runtime/helpers/esm/taggedTemplateLiteral\";\n\nvar _this = this,\n    _jsxFileName = \"/home/joe/dev/gateway/pages/people/index.js\";\n\nvar __jsx = React.createElement;\n\nfunction _templateObject13() {\n  var data = _taggedTemplateLiteral([\"\\n  margin: 0 20px 20px;\\n\"]);\n\n  _templateObject13 = function _templateObject13() {\n    return data;\n  };\n\n  return data;\n}\n\nfunction _templateObject12() {\n  var data = _taggedTemplateLiteral([\"\\n  text-transform: capitalize;\\n  color: \", \";\\n  font-size: 30px;\\n  line-height: 36px;\\n  margin: 40px 20px 20px;\\n\"]);\n\n  _templateObject12 = function _templateObject12() {\n    return data;\n  };\n\n  return data;\n}\n\nfunction _templateObject11() {\n  var data = _taggedTemplateLiteral([\"\\n  @media screen and (min-width: 991px) {\\n    font-size: 24px;\\n    line-height: 30px;\\n  }\\n\"]);\n\n  _templateObject11 = function _templateObject11() {\n    return data;\n  };\n\n  return data;\n}\n\nfunction _templateObject10() {\n  var data = _taggedTemplateLiteral([\"\\n  @media screen and (min-width: 991px) {\\n    font-size: 24px;\\n    line-height: 30px;\\n    margin-bottom: 10px;\\n  }\\n\"]);\n\n  _templateObject10 = function _templateObject10() {\n    return data;\n  };\n\n  return data;\n}\n\nfunction _templateObject9() {\n  var data = _taggedTemplateLiteral([\"\\n  @media screen and (min-width: 991px) {\\n    width: calc(50% - 10px);\\n    margin-bottom: 20px;\\n\\n    &:nth-child(odd) {\\n      float: left;\\n    }\\n\\n    &:nth-child(even) {\\n      float: right;\\n    }\\n  }\\n\"]);\n\n  _templateObject9 = function _templateObject9() {\n    return data;\n  };\n\n  return data;\n}\n\nfunction _templateObject8() {\n  var data = _taggedTemplateLiteral([\"\\n  @media screen and (min-width: 991px) {\\n    width: calc(50% - 10px);\\n    margin-bottom: 20px;\\n\\n    &:nth-child(odd) {\\n      float: left;\\n    }\\n\\n    &:nth-child(even) {\\n      float: right;\\n    }\\n  }\\n\"]);\n\n  _templateObject8 = function _templateObject8() {\n    return data;\n  };\n\n  return data;\n}\n\nfunction _templateObject7() {\n  var data = _taggedTemplateLiteral([\"\\n  position: absolute;\\n  bottom: 20px;\\n\"]);\n\n  _templateObject7 = function _templateObject7() {\n    return data;\n  };\n\n  return data;\n}\n\nfunction _templateObject6() {\n  var data = _taggedTemplateLiteral([\"\\n  padding: 20px;\\n  line-height: 30px;\\n\"]);\n\n  _templateObject6 = function _templateObject6() {\n    return data;\n  };\n\n  return data;\n}\n\nfunction _templateObject5() {\n  var data = _taggedTemplateLiteral([\"\\n  width: 50%;\\n  float: left;\\n  position: relative;\\n  margin-bottom: 10px;\\n  height: 200px;\\n  color: white;\\n  background-color: \", \";\\n\"]);\n\n  _templateObject5 = function _templateObject5() {\n    return data;\n  };\n\n  return data;\n}\n\nfunction _templateObject4() {\n  var data = _taggedTemplateLiteral([\"\\n  line-height: 30px;\\n  padding-bottom: 20px;\\n  color: white;\\n\\n  @media screen and (min-width: 991px) {\\n    font-size: 24px;\\n    line-height: 30px;\\n  }\\n\"]);\n\n  _templateObject4 = function _templateObject4() {\n    return data;\n  };\n\n  return data;\n}\n\nfunction _templateObject3() {\n  var data = _taggedTemplateLiteral([\"\\n  font-size: 30px;\\n  line-height: 76px;\\n\"]);\n\n  _templateObject3 = function _templateObject3() {\n    return data;\n  };\n\n  return data;\n}\n\nfunction _templateObject2() {\n  var data = _taggedTemplateLiteral([\"\\n  font-size: 30px;\\n  line-height: 76px;\\n  padding: 0 30px;\\n  background-color: \", \";\\n  color: white;\\n  margin-bottom: 20px;\\n\"]);\n\n  _templateObject2 = function _templateObject2() {\n    return data;\n  };\n\n  return data;\n}\n\nfunction _templateObject() {\n  var data = _taggedTemplateLiteral([\"\\n  padding: 0 30px;\\n  color: white;\\n  background-color: \", \";\\n  display: block;\\n  height: 300px;\\n\"]);\n\n  _templateObject = function _templateObject() {\n    return data;\n  };\n\n  return data;\n}\n\nimport React, { useState, useEffect } from 'react';\nimport styled from 'styled-components';\nimport { useRouter } from 'next/router';\nimport Head from 'next/head';\nimport Link from 'next/link';\nimport { getData, getMenuColour, changeColourToHex, getFullUrl, getAllColours } from '../../helpers';\nimport HeaderContainer from '../../components/HeaderContainer';\nimport Header from '../../templates/Header';\nimport Deck from '../../components/Deck';\nimport Footer from '../../templates/Footer';\nimport Image from '../../components/Image';\nimport Container from '../../components/Container';\nimport Clearfix from '../../components/Clearfix';\nvar StyledLink = styled.a(_templateObject(), function (props) {\n  return props.colour;\n});\nvar FilterTitle = styled.h1(_templateObject2(), function (props) {\n  return props.colour;\n});\nvar FilterItemTitle = styled.h2(_templateObject3());\nvar FilterItemDeck = styled.p(_templateObject4());\nvar PersonBlock = styled.div(_templateObject5(), function (props) {\n  return props.colour;\n});\nvar Padding = styled.div(_templateObject6());\nvar Email = styled.p(_templateObject7());\nvar Filter = styled.li(_templateObject8());\nvar Person = styled.li(_templateObject9());\nvar PersonTitle = styled.h2(_templateObject10());\nvar PersonRole = styled.p(_templateObject11());\nvar H1 = styled.h1(_templateObject12(), function (props) {\n  return props.colour;\n});\nvar P = styled.p(_templateObject13());\n\nvar NoPeopleFound = function NoPeopleFound(_ref) {\n  var colourHex = _ref.colourHex,\n      filter = _ref.filter;\n  return __jsx(\"main\", {\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 132,\n      columnNumber: 3\n    }\n  }, __jsx(Container, {\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 133,\n      columnNumber: 5\n    }\n  }, __jsx(H1, {\n    colour: colourHex,\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 134,\n      columnNumber: 7\n    }\n  }, \"No People found\"), __jsx(P, {\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 135,\n      columnNumber: 7\n    }\n  }, \"No people matching the filter \", filter, \" found.\")));\n};\n\nvar PeopleFilters = function PeopleFilters(_ref2) {\n  var colourHexLight = _ref2.colourHexLight,\n      deckColour = _ref2.deckColour,\n      deckParagraph = _ref2.deckParagraph,\n      deckImage = _ref2.deckImage,\n      acceptedFilters = _ref2.acceptedFilters;\n  return __jsx(\"main\", {\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 147,\n      columnNumber: 3\n    }\n  }, __jsx(Deck, {\n    colour: deckColour,\n    text: deckParagraph,\n    image: deckImage,\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 148,\n      columnNumber: 5\n    }\n  }), __jsx(Container, {\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 149,\n      columnNumber: 5\n    }\n  }, __jsx(FilterTitle, {\n    colour: colourHexLight,\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 150,\n      columnNumber: 7\n    }\n  }, \"Filter By\"), __jsx(\"ul\", {\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 151,\n      columnNumber: 7\n    }\n  }, acceptedFilters.map(function (filter) {\n    return __jsx(Filter, {\n      key: filter.name,\n      __self: _this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 153,\n        columnNumber: 11\n      }\n    }, __jsx(Link, {\n      href: \"people?filter=\".concat(filter.name),\n      passHref: true,\n      __self: _this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 154,\n        columnNumber: 13\n      }\n    }, __jsx(StyledLink, {\n      colour: filter.colour,\n      __self: _this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 155,\n        columnNumber: 15\n      }\n    }, __jsx(FilterItemTitle, {\n      __self: _this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 156,\n        columnNumber: 17\n      }\n    }, filter.title.split('-').map(function (word) {\n      return word[0].toUpperCase() + word.substr(1);\n    }).join(' ')), __jsx(FilterItemDeck, {\n      __self: _this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 162,\n        columnNumber: 17\n      }\n    }, filter.deck))));\n  })), __jsx(Clearfix, {\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 168,\n      columnNumber: 7\n    }\n  })));\n};\n\nvar PeopleList = function PeopleList(_ref3) {\n  var colourHex = _ref3.colourHex,\n      people = _ref3.people,\n      filter = _ref3.filter;\n  return __jsx(\"main\", {\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 174,\n      columnNumber: 3\n    }\n  }, __jsx(Container, {\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 175,\n      columnNumber: 5\n    }\n  }, __jsx(H1, {\n    colour: colourHex,\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 176,\n      columnNumber: 7\n    }\n  }, \"People: \", filter), __jsx(\"ul\", {\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 177,\n      columnNumber: 7\n    }\n  }, people.map(function (person) {\n    return __jsx(Person, {\n      key: person.data.title,\n      __self: _this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 179,\n        columnNumber: 11\n      }\n    }, __jsx(Link, {\n      href: \"/people/\".concat(person.data.title),\n      passHref: true,\n      __self: _this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 180,\n        columnNumber: 13\n      }\n    }, __jsx(\"a\", {\n      __self: _this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 181,\n        columnNumber: 15\n      }\n    }, __jsx(PersonBlock, {\n      colour: changeColourToHex(person.data.menuColour, true),\n      __self: _this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 182,\n        columnNumber: 17\n      }\n    }, __jsx(Image, {\n      url: getFullUrl(person.data.image),\n      __self: _this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 185,\n        columnNumber: 19\n      }\n    })), __jsx(PersonBlock, {\n      colour: changeColourToHex(person.data.menuColour, true),\n      __self: _this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 187,\n        columnNumber: 17\n      }\n    }, __jsx(Padding, {\n      __self: _this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 190,\n        columnNumber: 19\n      }\n    }, __jsx(PersonTitle, {\n      __self: _this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 191,\n        columnNumber: 21\n      }\n    }, person.data.title.split('-').map(function (word) {\n      return word[0].toUpperCase() + word.substr(1);\n    }).join(' ')), __jsx(PersonRole, {\n      __self: _this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 197,\n        columnNumber: 21\n      }\n    }, person.data.titleRole), __jsx(Email, {\n      __self: _this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 198,\n        columnNumber: 21\n      }\n    }, person.data.email))))));\n  }))));\n};\n\nvar People = function People() {\n  var _useState = useState(true),\n      loading = _useState[0],\n      setLoading = _useState[1];\n\n  var _useState2 = useState(''),\n      title = _useState2[0],\n      setTitle = _useState2[1];\n\n  var _useState3 = useState(''),\n      image = _useState3[0],\n      setImage = _useState3[1];\n\n  var _useState4 = useState(''),\n      colour = _useState4[0],\n      setColour = _useState4[1];\n\n  var _useState5 = useState(''),\n      colourHex = _useState5[0],\n      setColourHex = _useState5[1];\n\n  var _useState6 = useState(''),\n      colourHexLight = _useState6[0],\n      setColourHexLight = _useState6[1];\n\n  var _useState7 = useState(''),\n      deckColour = _useState7[0],\n      setDeckColour = _useState7[1];\n\n  var _useState8 = useState(''),\n      deckImage = _useState8[0],\n      setDeckImage = _useState8[1];\n\n  var _useState9 = useState(''),\n      deckParagraph = _useState9[0],\n      setDeckParagraph = _useState9[1];\n\n  var _useState10 = useState([]),\n      people = _useState10[0],\n      setPeople = _useState10[1];\n\n  var _useState11 = useState(''),\n      filter = _useState11[0],\n      setFilter = _useState11[1];\n\n  var _useState12 = useState([]),\n      acceptedFilters = _useState12[0],\n      setAcceptedFilters = _useState12[1];\n\n  var router = useRouter();\n  useEffect(function () {\n    var _ref4 = router || {},\n        query = _ref4.query;\n\n    var filter = query.filter;\n    setFilter(filter);\n    Promise.all([getData('data/peopleFilters/index.json'), getData('data/people/index.json'), getData('data/pages/people.json')]).then(function (_ref5) {\n      var _ref6 = _slicedToArray(_ref5, 3),\n          acceptedFilters = _ref6[0],\n          workingPeople = _ref6[1],\n          data = _ref6[2];\n\n      setTitle(data.title);\n      setImage(data.header.image);\n\n      var _getAllColours = getAllColours(getMenuColour(data)),\n          _getAllColours2 = _slicedToArray(_getAllColours, 3),\n          colour = _getAllColours2[0],\n          colourHex = _getAllColours2[1],\n          colourHexLight = _getAllColours2[2];\n\n      setColour(colour);\n      setColourHex(colourHex);\n      setColourHexLight(colourHexLight);\n      setDeckImage(data.deck.image && getFullUrl(data.deck.image));\n      setDeckParagraph(data.deck.paragraph);\n      setDeckColour(changeColourToHex(data.deck.colour));\n      setAcceptedFilters(Object.values(acceptedFilters).map(function (f) {\n        return f.data || f;\n      }).map(function (f) {\n        return {\n          name: f.name,\n          title: f.title,\n          deck: f.deck,\n          colour: changeColourToHex(f.colour, true)\n        };\n      }));\n      var people = Object.values(workingPeople) || [];\n      setPeople(people.filter(function (person) {\n        var personFilters = person.data.filters;\n        var keys = Object.keys(personFilters || {}).filter(function (key) {\n          return key === filter;\n        });\n        return keys.map(function (key) {\n          return personFilters[key];\n        }).some(function (personFilter) {\n          return personFilter === 'true';\n        });\n      }));\n      setLoading(false);\n    });\n  }, [router]);\n  if (loading) return __jsx(\"div\", {\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 281,\n      columnNumber: 23\n    }\n  });\n  return __jsx(React.Fragment, null, __jsx(Head, {\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 285,\n      columnNumber: 7\n    }\n  }, __jsx(\"title\", {\n    key: \"title\",\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 286,\n      columnNumber: 9\n    }\n  }, \"People - Gateway Church, York\")), __jsx(Header, {\n    colour: colour,\n    colourHex: colourHex,\n    title: title,\n    image: image,\n    Header: HeaderContainer,\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 288,\n      columnNumber: 7\n    }\n  }), people.length > 0 && filter && __jsx(PeopleList, {\n    colourHex: colourHex,\n    people: people,\n    filter: filter,\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 296,\n      columnNumber: 9\n    }\n  }), filter && people.length === 0 && __jsx(NoPeopleFound, {\n    colourHex: colourHex,\n    filter: filter,\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 299,\n      columnNumber: 9\n    }\n  }), !filter && __jsx(PeopleFilters, {\n    colourHexLight: colourHexLight,\n    deckColour: deckColour,\n    deckParagraph: deckParagraph,\n    deckImage: deckImage,\n    acceptedFilters: acceptedFilters,\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 302,\n      columnNumber: 9\n    }\n  }), __jsx(Clearfix, {\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 310,\n      columnNumber: 7\n    }\n  }), __jsx(Footer, {\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 311,\n      columnNumber: 7\n    }\n  }));\n};\n\nexport default People;",
  "map": {
    "version": 3,
    "sources": ["/home/joe/dev/gateway/pages/people/index.js"],
    "names": [
      "React",
      "useState",
      "useEffect",
      "styled",
      "useRouter",
      "Head",
      "Link",
      "getData",
      "getMenuColour",
      "changeColourToHex",
      "getFullUrl",
      "getAllColours",
      "HeaderContainer",
      "Header",
      "Deck",
      "Footer",
      "Image",
      "Container",
      "Clearfix",
      "StyledLink",
      "a",
      "props",
      "colour",
      "FilterTitle",
      "h1",
      "FilterItemTitle",
      "h2",
      "FilterItemDeck",
      "p",
      "PersonBlock",
      "div",
      "Padding",
      "Email",
      "Filter",
      "li",
      "Person",
      "PersonTitle",
      "PersonRole",
      "H1",
      "P",
      "NoPeopleFound",
      "colourHex",
      "filter",
      "PeopleFilters",
      "colourHexLight",
      "deckColour",
      "deckParagraph",
      "deckImage",
      "acceptedFilters",
      "map",
      "name",
      "title",
      "split",
      "word",
      "toUpperCase",
      "substr",
      "join",
      "deck",
      "PeopleList",
      "people",
      "person",
      "data",
      "menuColour",
      "image",
      "titleRole",
      "email",
      "People",
      "loading",
      "setLoading",
      "setTitle",
      "setImage",
      "setColour",
      "setColourHex",
      "setColourHexLight",
      "setDeckColour",
      "setDeckImage",
      "setDeckParagraph",
      "setPeople",
      "setFilter",
      "setAcceptedFilters",
      "router",
      "query",
      "Promise",
      "all",
      "then",
      "workingPeople",
      "header",
      "paragraph",
      "Object",
      "values",
      "f",
      "personFilters",
      "filters",
      "keys",
      "key",
      "some",
      "personFilter",
      "length"
    ],
    "mappings": "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",
    "sourcesContent": [
      "import React, {useState, useEffect} from 'react';\nimport styled from 'styled-components';\nimport {useRouter} from 'next/router';\nimport Head from 'next/head';\nimport Link from 'next/link';\nimport {\n  getData,\n  getMenuColour,\n  changeColourToHex,\n  getFullUrl,\n  getAllColours\n} from '../../helpers';\nimport HeaderContainer from '../../components/HeaderContainer';\nimport Header from '../../templates/Header';\nimport Deck from '../../components/Deck';\nimport Footer from '../../templates/Footer';\nimport Image from '../../components/Image';\nimport Container from '../../components/Container';\nimport Clearfix from '../../components/Clearfix';\n\nconst StyledLink = styled.a`\n  padding: 0 30px;\n  color: white;\n  background-color: ${props => props.colour};\n  display: block;\n  height: 300px;\n`;\n\nconst FilterTitle = styled.h1`\n  font-size: 30px;\n  line-height: 76px;\n  padding: 0 30px;\n  background-color: ${props => props.colour};\n  color: white;\n  margin-bottom: 20px;\n`;\n\nconst FilterItemTitle = styled.h2`\n  font-size: 30px;\n  line-height: 76px;\n`;\n\nconst FilterItemDeck = styled.p`\n  line-height: 30px;\n  padding-bottom: 20px;\n  color: white;\n\n  @media screen and (min-width: 991px) {\n    font-size: 24px;\n    line-height: 30px;\n  }\n`;\n\nconst PersonBlock = styled.div`\n  width: 50%;\n  float: left;\n  position: relative;\n  margin-bottom: 10px;\n  height: 200px;\n  color: white;\n  background-color: ${props => props.colour};\n`;\n\nconst Padding = styled.div`\n  padding: 20px;\n  line-height: 30px;\n`;\n\nconst Email = styled.p`\n  position: absolute;\n  bottom: 20px;\n`;\n\nconst Filter = styled.li`\n  @media screen and (min-width: 991px) {\n    width: calc(50% - 10px);\n    margin-bottom: 20px;\n\n    &:nth-child(odd) {\n      float: left;\n    }\n\n    &:nth-child(even) {\n      float: right;\n    }\n  }\n`;\n\nconst Person = styled.li`\n  @media screen and (min-width: 991px) {\n    width: calc(50% - 10px);\n    margin-bottom: 20px;\n\n    &:nth-child(odd) {\n      float: left;\n    }\n\n    &:nth-child(even) {\n      float: right;\n    }\n  }\n`;\n\nconst PersonTitle = styled.h2`\n  @media screen and (min-width: 991px) {\n    font-size: 24px;\n    line-height: 30px;\n    margin-bottom: 10px;\n  }\n`;\n\nconst PersonRole = styled.p`\n  @media screen and (min-width: 991px) {\n    font-size: 24px;\n    line-height: 30px;\n  }\n`;\n\nconst H1 = styled.h1`\n  text-transform: capitalize;\n  color: ${props => props.colour};\n  font-size: 30px;\n  line-height: 36px;\n  margin: 40px 20px 20px;\n`;\n\nconst P = styled.p`\n  margin: 0 20px 20px;\n`;\n\nconst NoPeopleFound = ({colourHex, filter}) => (\n  <main>\n    <Container>\n      <H1 colour={colourHex}>No People found</H1>\n      <P>No people matching the filter {filter} found.</P>\n    </Container>\n  </main>\n);\n\nconst PeopleFilters = ({\n  colourHexLight,\n  deckColour,\n  deckParagraph,\n  deckImage,\n  acceptedFilters\n}) => (\n  <main>\n    <Deck colour={deckColour} text={deckParagraph} image={deckImage} />\n    <Container>\n      <FilterTitle colour={colourHexLight}>Filter By</FilterTitle>\n      <ul>\n        {acceptedFilters.map(filter => (\n          <Filter key={filter.name}>\n            <Link href={`people?filter=${filter.name}`} passHref>\n              <StyledLink colour={filter.colour}>\n                <FilterItemTitle>\n                  {filter.title\n                    .split('-')\n                    .map(word => word[0].toUpperCase() + word.substr(1))\n                    .join(' ')}\n                </FilterItemTitle>\n                <FilterItemDeck>{filter.deck}</FilterItemDeck>\n              </StyledLink>\n            </Link>\n          </Filter>\n        ))}\n      </ul>\n      <Clearfix />\n    </Container>\n  </main>\n);\n\nconst PeopleList = ({colourHex, people, filter}) => (\n  <main>\n    <Container>\n      <H1 colour={colourHex}>People: {filter}</H1>\n      <ul>\n        {people.map(person => (\n          <Person key={person.data.title}>\n            <Link href={`/people/${person.data.title}`} passHref>\n              <a>\n                <PersonBlock\n                  colour={changeColourToHex(person.data.menuColour, true)}\n                >\n                  <Image url={getFullUrl(person.data.image)} />\n                </PersonBlock>\n                <PersonBlock\n                  colour={changeColourToHex(person.data.menuColour, true)}\n                >\n                  <Padding>\n                    <PersonTitle>\n                      {person.data.title\n                        .split('-')\n                        .map(word => word[0].toUpperCase() + word.substr(1))\n                        .join(' ')}\n                    </PersonTitle>\n                    <PersonRole>{person.data.titleRole}</PersonRole>\n                    <Email>{person.data.email}</Email>\n                  </Padding>\n                </PersonBlock>\n              </a>\n            </Link>\n          </Person>\n        ))}\n      </ul>\n    </Container>\n  </main>\n);\n\nconst People = () => {\n  const [loading, setLoading] = useState(true);\n  const [title, setTitle] = useState('');\n  const [image, setImage] = useState('');\n  const [colour, setColour] = useState('');\n  const [colourHex, setColourHex] = useState('');\n  const [colourHexLight, setColourHexLight] = useState('');\n  const [deckColour, setDeckColour] = useState('');\n  const [deckImage, setDeckImage] = useState('');\n  const [deckParagraph, setDeckParagraph] = useState('');\n  const [people, setPeople] = useState([]);\n  const [filter, setFilter] = useState('');\n  const [acceptedFilters, setAcceptedFilters] = useState([]);\n  const router = useRouter();\n\n  useEffect(() => {\n    const {query} = router || {};\n    const {filter} = query;\n    setFilter(filter);\n\n    Promise.all([\n      getData('data/peopleFilters/index.json'),\n      getData('data/people/index.json'),\n      getData('data/pages/people.json')\n    ]).then(([acceptedFilters, workingPeople, data]) => {\n      setTitle(data.title);\n      setImage(data.header.image);\n      const [colour, colourHex, colourHexLight] = getAllColours(\n        getMenuColour(data)\n      );\n      setColour(colour);\n      setColourHex(colourHex);\n      setColourHexLight(colourHexLight);\n      setDeckImage(data.deck.image && getFullUrl(data.deck.image));\n      setDeckParagraph(data.deck.paragraph);\n\n      setDeckColour(changeColourToHex(data.deck.colour));\n\n      setAcceptedFilters(\n        Object.values(acceptedFilters)\n          .map(f => f.data || f)\n          .map(f => ({\n            name: f.name,\n            title: f.title,\n            deck: f.deck,\n            colour: changeColourToHex(f.colour, true)\n          }))\n      );\n\n      let people = Object.values(workingPeople) || [];\n\n      setPeople(\n        people.filter(person => {\n          const {\n            data: {filters: personFilters}\n          } = person;\n\n          const keys = Object.keys(personFilters || {}).filter(\n            key => key === filter\n          );\n\n          return keys\n            .map(key => personFilters[key])\n            .some(personFilter => personFilter === 'true');\n        })\n      );\n\n      setLoading(false);\n    });\n  }, [router]);\n\n  if (loading) return <div />;\n\n  return (\n    <>\n      <Head>\n        <title key=\"title\">People - Gateway Church, York</title>\n      </Head>\n      <Header\n        colour={colour}\n        colourHex={colourHex}\n        title={title}\n        image={image}\n        Header={HeaderContainer}\n      />\n      {people.length > 0 && filter && (\n        <PeopleList colourHex={colourHex} people={people} filter={filter} />\n      )}\n      {filter && people.length === 0 && (\n        <NoPeopleFound colourHex={colourHex} filter={filter} />\n      )}\n      {!filter && (\n        <PeopleFilters\n          colourHexLight={colourHexLight}\n          deckColour={deckColour}\n          deckParagraph={deckParagraph}\n          deckImage={deckImage}\n          acceptedFilters={acceptedFilters}\n        />\n      )}\n      <Clearfix />\n      <Footer />\n    </>\n  );\n};\n\nexport default People;\n"
    ]
  },
  "metadata": {},
  "sourceType": "module"
}

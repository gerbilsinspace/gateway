{
  "ast": null,
  "code": "import _slicedToArray from \"@babel/runtime/helpers/esm/slicedToArray\";\nimport _taggedTemplateLiteral from \"@babel/runtime/helpers/esm/taggedTemplateLiteral\";\nvar __jsx = React.createElement;\n\nfunction _templateObject13() {\n  var data = _taggedTemplateLiteral([\"\\n  margin: 0 20px 20px;\\n\"]);\n\n  _templateObject13 = function _templateObject13() {\n    return data;\n  };\n\n  return data;\n}\n\nfunction _templateObject12() {\n  var data = _taggedTemplateLiteral([\"\\n  text-transform: capitalize;\\n  color: \", \";\\n  font-size: 30px;\\n  line-height: 36px;\\n  margin: 40px 20px 20px;\\n\"]);\n\n  _templateObject12 = function _templateObject12() {\n    return data;\n  };\n\n  return data;\n}\n\nfunction _templateObject11() {\n  var data = _taggedTemplateLiteral([\"\\n  @media screen and (min-width: 991px) {\\n    font-size: 24px;\\n    line-height: 30px;\\n  }\\n\"]);\n\n  _templateObject11 = function _templateObject11() {\n    return data;\n  };\n\n  return data;\n}\n\nfunction _templateObject10() {\n  var data = _taggedTemplateLiteral([\"\\n  @media screen and (min-width: 991px) {\\n    font-size: 24px;\\n    line-height: 30px;\\n    margin-bottom: 10px;\\n  }\\n\"]);\n\n  _templateObject10 = function _templateObject10() {\n    return data;\n  };\n\n  return data;\n}\n\nfunction _templateObject9() {\n  var data = _taggedTemplateLiteral([\"\\n  @media screen and (min-width: 991px) {\\n    width: calc(50% - 10px);\\n    margin-bottom: 20px;\\n\\n    &:nth-child(odd) {\\n      float: left;\\n    }\\n\\n    &:nth-child(even) {\\n      float: right;\\n    }\\n  }\\n\"]);\n\n  _templateObject9 = function _templateObject9() {\n    return data;\n  };\n\n  return data;\n}\n\nfunction _templateObject8() {\n  var data = _taggedTemplateLiteral([\"\\n  @media screen and (min-width: 991px) {\\n    width: calc(50% - 10px);\\n    margin-bottom: 20px;\\n\\n    &:nth-child(odd) {\\n      float: left;\\n    }\\n\\n    &:nth-child(even) {\\n      float: right;\\n    }\\n  }\\n\"]);\n\n  _templateObject8 = function _templateObject8() {\n    return data;\n  };\n\n  return data;\n}\n\nfunction _templateObject7() {\n  var data = _taggedTemplateLiteral([\"\\n  position: absolute;\\n  bottom: 20px;\\n\"]);\n\n  _templateObject7 = function _templateObject7() {\n    return data;\n  };\n\n  return data;\n}\n\nfunction _templateObject6() {\n  var data = _taggedTemplateLiteral([\"\\n  padding: 20px;\\n  line-height: 30px;\\n\"]);\n\n  _templateObject6 = function _templateObject6() {\n    return data;\n  };\n\n  return data;\n}\n\nfunction _templateObject5() {\n  var data = _taggedTemplateLiteral([\"\\n  width: 50%;\\n  float: left;\\n  position: relative;\\n  margin-bottom: 10px;\\n  height: 200px;\\n  color: white;\\n  background-color: \", \";\\n\"]);\n\n  _templateObject5 = function _templateObject5() {\n    return data;\n  };\n\n  return data;\n}\n\nfunction _templateObject4() {\n  var data = _taggedTemplateLiteral([\"\\n  line-height: 30px;\\n  padding-bottom: 20px;\\n  color: white;\\n\\n  @media screen and (min-width: 991px) {\\n    font-size: 24px;\\n    line-height: 30px;\\n  }\\n\"]);\n\n  _templateObject4 = function _templateObject4() {\n    return data;\n  };\n\n  return data;\n}\n\nfunction _templateObject3() {\n  var data = _taggedTemplateLiteral([\"\\n  font-size: 30px;\\n  line-height: 76px;\\n\"]);\n\n  _templateObject3 = function _templateObject3() {\n    return data;\n  };\n\n  return data;\n}\n\nfunction _templateObject2() {\n  var data = _taggedTemplateLiteral([\"\\n  font-size: 30px;\\n  line-height: 76px;\\n  padding: 0 30px;\\n  background-color: \", \";\\n  color: white;\\n  margin-bottom: 20px;\\n\"]);\n\n  _templateObject2 = function _templateObject2() {\n    return data;\n  };\n\n  return data;\n}\n\nfunction _templateObject() {\n  var data = _taggedTemplateLiteral([\"\\n  padding: 0 30px;\\n  color: white;\\n  background-color: \", \";\\n  display: block;\\n  height: 300px;\\n\"]);\n\n  _templateObject = function _templateObject() {\n    return data;\n  };\n\n  return data;\n}\n\nimport React, { useState, useEffect } from 'react';\nimport styled from 'styled-components';\nimport { useRouter } from 'next/router';\nimport Head from 'next/head';\nimport { getData, getMenuColour, changeColourToHex, getFullUrl, getAllColours } from '../helpers';\nimport { Link } from '../router';\nimport HeaderContainer from '../components/HeaderContainer';\nimport Header from '../templates/Header';\nimport Deck from '../components/Deck';\nimport Footer from '../templates/Footer';\nimport Image from '../components/Image';\nimport Container from '../components/Container';\nimport Clearfix from '../components/Clearfix';\nvar StyledLink = styled.a(_templateObject(), function (props) {\n  return props.colour;\n});\nvar FilterTitle = styled.h1(_templateObject2(), function (props) {\n  return props.colour;\n});\nvar FilterItemTitle = styled.h2(_templateObject3());\nvar FilterItemDeck = styled.p(_templateObject4());\nvar PersonBlock = styled.div(_templateObject5(), function (props) {\n  return props.colour;\n});\nvar Padding = styled.div(_templateObject6());\nvar Email = styled.p(_templateObject7());\nvar Filter = styled.li(_templateObject8());\nvar Person = styled.li(_templateObject9());\nvar PersonTitle = styled.h2(_templateObject10());\nvar PersonRole = styled.p(_templateObject11());\nvar H1 = styled.h1(_templateObject12(), function (props) {\n  return props.colour;\n});\nvar P = styled.p(_templateObject13());\n\nvar NoPeopleFound = function NoPeopleFound(_ref) {\n  var colourHex = _ref.colourHex,\n      filter = _ref.filter;\n  return __jsx(\"main\", null, __jsx(Container, null, __jsx(H1, {\n    colour: colourHex\n  }, \"No People found\"), __jsx(P, null, \"No people matching the filter \", filter, \" found.\")));\n};\n\nvar PeopleFilters = function PeopleFilters(_ref2) {\n  var colourHexLight = _ref2.colourHexLight,\n      deckColour = _ref2.deckColour,\n      deckParagraph = _ref2.deckParagraph,\n      deckImage = _ref2.deckImage,\n      acceptedFilters = _ref2.acceptedFilters;\n  return __jsx(\"main\", null, __jsx(Deck, {\n    colour: deckColour,\n    text: deckParagraph,\n    image: deckImage\n  }), __jsx(Container, null, __jsx(FilterTitle, {\n    colour: colourHexLight\n  }, \"Filter By\"), __jsx(\"ul\", null, acceptedFilters.map(function (filter) {\n    return __jsx(Filter, {\n      key: filter.name\n    }, __jsx(Link, {\n      href: \"people?filter=\".concat(filter.name),\n      passHref: true\n    }, __jsx(StyledLink, {\n      colour: filter.colour\n    }, __jsx(FilterItemTitle, null, filter.title.split('-').map(function (word) {\n      return word[0].toUpperCase() + word.substr(1);\n    }).join(' ')), __jsx(FilterItemDeck, null, filter.deck))));\n  })), __jsx(Clearfix, null)));\n};\n\nvar PeopleList = function PeopleList(_ref3) {\n  var colourHex = _ref3.colourHex,\n      people = _ref3.people,\n      filter = _ref3.filter;\n  return __jsx(\"main\", null, __jsx(Container, null, __jsx(H1, {\n    colour: colourHex\n  }, \"People: \", filter), __jsx(\"ul\", null, people.map(function (person) {\n    return __jsx(Person, {\n      key: person.data.title\n    }, __jsx(Link, {\n      href: \"/people/\".concat(person.data.title),\n      passHref: true\n    }, __jsx(\"a\", null, __jsx(PersonBlock, {\n      colour: changeColourToHex(person.data.menuColour, true)\n    }, __jsx(Image, {\n      url: getFullUrl(person.data.image)\n    })), __jsx(PersonBlock, {\n      colour: changeColourToHex(person.data.menuColour, true)\n    }, __jsx(Padding, null, __jsx(PersonTitle, null, person.data.title.split('-').map(function (word) {\n      return word[0].toUpperCase() + word.substr(1);\n    }).join(' ')), __jsx(PersonRole, null, person.data.titleRole), __jsx(Email, null, person.data.email))))));\n  }))));\n};\n\nvar People = function People() {\n  var _useState = useState(true),\n      loading = _useState[0],\n      setLoading = _useState[1];\n\n  var _useState2 = useState(''),\n      title = _useState2[0],\n      setTitle = _useState2[1];\n\n  var _useState3 = useState(''),\n      image = _useState3[0],\n      setImage = _useState3[1];\n\n  var _useState4 = useState(''),\n      colour = _useState4[0],\n      setColour = _useState4[1];\n\n  var _useState5 = useState(''),\n      colourHex = _useState5[0],\n      setColourHex = _useState5[1];\n\n  var _useState6 = useState(''),\n      colourHexLight = _useState6[0],\n      setColourHexLight = _useState6[1];\n\n  var _useState7 = useState(''),\n      deckColour = _useState7[0],\n      setDeckColour = _useState7[1];\n\n  var _useState8 = useState(''),\n      deckImage = _useState8[0],\n      setDeckImage = _useState8[1];\n\n  var _useState9 = useState(''),\n      deckParagraph = _useState9[0],\n      setDeckParagraph = _useState9[1];\n\n  var _useState10 = useState([]),\n      people = _useState10[0],\n      setPeople = _useState10[1];\n\n  var _useState11 = useState(''),\n      filter = _useState11[0],\n      setFilter = _useState11[1];\n\n  var _useState12 = useState([]),\n      acceptedFilters = _useState12[0],\n      setAcceptedFilters = _useState12[1];\n\n  var router = useRouter();\n  useEffect(function () {\n    var _ref4 = router || {},\n        query = _ref4.query;\n\n    var filter = query.filter;\n    setFilter(filter);\n    Promise.all([getData('data/peopleFilters/index.json'), getData('data/people/index.json'), getData('data/pages/people.json')]).then(function (_ref5) {\n      var _ref6 = _slicedToArray(_ref5, 3),\n          acceptedFilters = _ref6[0],\n          workingPeople = _ref6[1],\n          data = _ref6[2];\n\n      setTitle(data.title);\n      setImage(data.header.image);\n\n      var _getAllColours = getAllColours(getMenuColour(data)),\n          _getAllColours2 = _slicedToArray(_getAllColours, 3),\n          colour = _getAllColours2[0],\n          colourHex = _getAllColours2[1],\n          colourHexLight = _getAllColours2[2];\n\n      setColour(colour);\n      setColourHex(colourHex);\n      setColourHexLight(colourHexLight);\n      setDeckImage(data.deck.image && getFullUrl(data.deck.image));\n      setDeckParagraph(data.deck.paragraph);\n      setDeckColour(changeColourToHex(data.deck.colour));\n      setAcceptedFilters(Object.values(acceptedFilters).map(function (f) {\n        return f.data || f;\n      }).map(function (f) {\n        return {\n          name: f.name,\n          title: f.title,\n          deck: f.deck,\n          colour: changeColourToHex(f.colour, true)\n        };\n      }));\n      var people = Object.values(workingPeople) || [];\n      setPeople(people.filter(function (person) {\n        var personFilters = person.data.filters;\n        var keys = Object.keys(personFilters || {}).filter(function (key) {\n          return key === filter;\n        });\n        return keys.map(function (key) {\n          return personFilters[key];\n        }).some(function (personFilter) {\n          return personFilter === 'true';\n        });\n      }));\n      setLoading(false);\n    });\n  }, [router]);\n  if (loading) return __jsx(\"div\", null);\n  return __jsx(React.Fragment, null, __jsx(Head, null, __jsx(\"title\", {\n    key: \"title\"\n  }, \"People - Gateway Church, York\")), __jsx(Header, {\n    colour: colour,\n    colourHex: colourHex,\n    title: title,\n    image: image,\n    Header: HeaderContainer\n  }), people.length > 0 && filter && __jsx(PeopleList, {\n    colourHex: colourHex,\n    people: people,\n    filter: filter\n  }), filter && people.length === 0 && __jsx(NoPeopleFound, {\n    colourHex: colourHex,\n    filter: filter\n  }), !filter && __jsx(PeopleFilters, {\n    colourHexLight: colourHexLight,\n    deckColour: deckColour,\n    deckParagraph: deckParagraph,\n    deckImage: deckImage,\n    acceptedFilters: acceptedFilters\n  }), __jsx(Clearfix, null), __jsx(Footer, null));\n};\n\nexport default People;",
  "map": null,
  "metadata": {},
  "sourceType": "module"
}

{
  "ast": null,
  "code": "import _slicedToArray from \"@babel/runtime/helpers/esm/slicedToArray\";\nimport _taggedTemplateLiteral from \"@babel/runtime/helpers/esm/taggedTemplateLiteral\";\nvar __jsx = React.createElement;\n\nfunction _templateObject8() {\n  var data = _taggedTemplateLiteral([\"\\n  display: block;\\n  width: 100%;\\n\"]);\n\n  _templateObject8 = function _templateObject8() {\n    return data;\n  };\n\n  return data;\n}\n\nfunction _templateObject7() {\n  var data = _taggedTemplateLiteral([\"\\n  float: \", \";\\n  background-color: \", \";\\n  width: \", \";\\n  min-height: 200px;\\n\\n  @media screen and (min-width: 991px) {\\n    width: calc(\", \"% - 10px);\\n    border-right: \", \";\\n    border-left: \", \";\\n    border-bottom: \", \";\\n    height: 500px;\\n  }\\n\\n  h2 {\\n    font-size: 2em;\\n    line-height: 3em;\\n  }\\n\\n  p {\\n    margin-bottom: 1em;\\n  }\\n\\n  a {\\n    color: #fff;\\n    text-decoration: underline;\\n  }\\n\"]);\n\n  _templateObject7 = function _templateObject7() {\n    return data;\n  };\n\n  return data;\n}\n\nfunction _templateObject6() {\n  var data = _taggedTemplateLiteral([\"\\n  position: absolute;\\n  z-index: 1;\\n  text-align: center;\\n  color: white;\\n  line-height: 200px;\\n  height: 200px;\\n  text-align: center;\\n  font-size: 50px;\\n  display: block;\\n  width: 100%;\\n\\n  @media screen and (min-width: 991px) {\\n    height: 500px;\\n    line-height: 500px;\\n  }\\n\"]);\n\n  _templateObject6 = function _templateObject6() {\n    return data;\n  };\n\n  return data;\n}\n\nfunction _templateObject5() {\n  var data = _taggedTemplateLiteral([\"\\n  @media screen and (min-width: 991px) {\\n    font-size: 24px;\\n    line-height: 30px;\\n    width: 850px;\\n    margin: 0 auto;\\n    text-align: center;\\n  }\\n\"]);\n\n  _templateObject5 = function _templateObject5() {\n    return data;\n  };\n\n  return data;\n}\n\nfunction _templateObject4() {\n  var data = _taggedTemplateLiteral([\"\\n  font-size: 30px;\\n  line-height: 36px;\\n  margin-bottom: 20px;\\n\\n  @media screen and (min-width: 991px) {\\n    width: 850px;\\n    margin: 0 auto 20px;\\n    text-align: center;\\n  }\\n\"]);\n\n  _templateObject4 = function _templateObject4() {\n    return data;\n  };\n\n  return data;\n}\n\nfunction _templateObject3() {\n  var data = _taggedTemplateLiteral([\"\\n  padding: 40px;\\n  background-color: \", \";\\n  color: white;\\n  margin-bottom: 20px;\\n\"]);\n\n  _templateObject3 = function _templateObject3() {\n    return data;\n  };\n\n  return data;\n}\n\nfunction _templateObject2() {\n  var data = _taggedTemplateLiteral([\"\\n  position: absolute;\\n  z-index: 1;\\n  text-align: center;\\n  font-size: 30px;\\n  line-height: 36px;\\n  color: #fff;\\n  height: 200px;\\n  width: 100%;\\n  padding: 40px 0;\\n  text-align: center;\\n\\n  @media screen and (min-width: 991px) {\\n    height: 500px;\\n    padding: 175px 0 0;\\n  }\\n\\n  @media screen and (min-width: 1021px) {\\n    font-size: 90px;\\n    line-height: 1.5em;\\n  }\\n\"]);\n\n  _templateObject2 = function _templateObject2() {\n    return data;\n  };\n\n  return data;\n}\n\nfunction _templateObject() {\n  var data = _taggedTemplateLiteral([\"\\n  position: relative;\\n  z-index: 1;\\n  padding: 35px;\\n  line-height: 30px;\\n  color: #fff;\\n\"]);\n\n  _templateObject = function _templateObject() {\n    return data;\n  };\n\n  return data;\n}\n\nimport React, { useState, useEffect } from 'react';\nimport styled from 'styled-components';\nimport { useRouter } from 'next/router';\nimport Head from 'next/head';\nimport { markdown } from 'markdown';\nimport { Router } from '../router';\nimport { url } from '../helpers/config';\nimport Header from '../templates/Header';\nimport Footer from '../templates/Footer';\nimport HeaderContainer from '../components/HeaderContainer';\nimport Image from '../components/Image';\nimport ImageWrapper from '../components/ImageWrapper';\nimport Container from '../components/Container';\nimport Clearfix from '../components/Clearfix';\nimport { getData, getMenuColour, getFullUrl, changeColourToHex, getAllColours } from '../helpers';\nvar Deck = styled.div(_templateObject());\nvar PageSummary = styled.div(_templateObject2());\nvar PageDeck = styled.div(_templateObject3(), function (props) {\n  return props.colour;\n});\nvar H2 = styled.h2(_templateObject4());\nvar P = styled.p(_templateObject5());\nvar HeaderDeck = styled.h3(_templateObject6());\nvar ContentPieceContainer = styled.div(_templateObject7(), function (props) {\n  return props.direction;\n}, function (props) {\n  return props.colour;\n}, function (props) {\n  return props.width ? '100%' : 0;\n}, function (props) {\n  return props.width;\n}, function (props) {\n  return props.direction === 'left' && props.width ? '10px solid #fff' : 0;\n}, function (props) {\n  return props.direction === 'right' && props.width ? '10px solid #fff' : 0;\n}, function (props) {\n  return props.width ? '20px solid white' : 0;\n});\n\nvar ContentPiece = function ContentPiece(_ref) {\n  var direction = _ref.direction,\n      deck = _ref.deck,\n      image = _ref.image,\n      colour = _ref.colour,\n      width = _ref.width;\n  var adjustedDirection = direction;\n\n  if (image) {\n    return __jsx(ContentPieceContainer, {\n      direction: adjustedDirection,\n      colour: colour,\n      width: width\n    }, __jsx(ImageWrapper, {\n      color: colour,\n      mobileMarginBottom: \"0\"\n    }, __jsx(Image, {\n      url: getFullUrl(image)\n    }), deck && __jsx(HeaderDeck, null, deck)));\n  }\n\n  if (typeof deck === 'undefined') return __jsx(\"div\", null);\n  return __jsx(React.Fragment, null, deck && __jsx(ContentPieceContainer, {\n    direction: adjustedDirection,\n    colour: colour,\n    width: width\n  }, __jsx(Deck, {\n    dangerouslySetInnerHTML: {\n      __html: markdown.toHTML(deck)\n    }\n  })));\n};\n\nvar ContentContainer = styled.li(_templateObject8());\n\nvar setWidth = function setWidth() {\n  var left = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : {};\n  var right = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : {};\n  var leftWidth = 0;\n  var rightWidth = 0;\n\n  if (left.deck && right.deck) {\n    leftWidth = 50;\n    rightWidth = 50;\n  } else if (left.image && right.image) {\n    leftWidth = 50;\n    rightWidth = 50;\n  } else if (left.image && right.deck) {\n    leftWidth = 60;\n    rightWidth = 40;\n  } else if (left.deck && right.image) {\n    leftWidth = 40;\n    rightWidth = 60;\n  } else if (!left.deck && !left.image && (right.image || right.deck)) {\n    leftWidth = 0;\n    rightWidth = 100;\n  } else if (!right.deck && !right.image && (left.image || left.deck)) {\n    leftWidth = 100;\n    rightWidth = 0;\n  }\n\n  return [leftWidth, rightWidth];\n};\n\nvar Content = function Content(_ref2) {\n  var content = _ref2.content;\n  var _content$left = content.left,\n      left = _content$left === void 0 ? {} : _content$left,\n      _content$right = content.right,\n      right = _content$right === void 0 ? {} : _content$right;\n\n  var _setWidth = setWidth(left, right),\n      _setWidth2 = _slicedToArray(_setWidth, 2),\n      leftWidth = _setWidth2[0],\n      rightWidth = _setWidth2[1];\n\n  if (right.deck && right.image) {\n    return __jsx(ContentContainer, null, __jsx(ContentPiece, {\n      direction: \"right\",\n      deck: right.deck,\n      image: right.image,\n      colour: changeColourToHex(right.colour),\n      width: rightWidth\n    }), __jsx(ContentPiece, {\n      direction: \"left\",\n      deck: left.deck,\n      image: left.image,\n      colour: changeColourToHex(left.colour),\n      width: leftWidth\n    }), __jsx(Clearfix, null));\n  }\n\n  return __jsx(ContentContainer, null, __jsx(ContentPiece, {\n    direction: \"left\",\n    deck: left.deck,\n    image: left.image,\n    colour: changeColourToHex(left.colour),\n    width: leftWidth\n  }), __jsx(ContentPiece, {\n    direction: \"right\",\n    deck: right.deck,\n    image: right.image,\n    colour: changeColourToHex(right.colour),\n    width: rightWidth\n  }), __jsx(Clearfix, null));\n};\n\nvar Contents = function Contents(_ref3) {\n  var _ref3$contents = _ref3.contents,\n      contents = _ref3$contents === void 0 ? [] : _ref3$contents;\n  return __jsx(\"ul\", null, contents.map(function (_ref4) {\n    var content = _ref4.content;\n    if (!content) return null;\n    var left = content.left || {};\n    var leftDeck = left.deck || '';\n    var right = content.right || {};\n    var rightDeck = right.deck || '';\n    return content && __jsx(Content, {\n      content: content,\n      key: leftDeck + rightDeck\n    });\n  }));\n};\n\nvar Page = function Page() {\n  var _useState = useState(true),\n      loading = _useState[0],\n      setLoading = _useState[1];\n\n  var _useState2 = useState(false),\n      error = _useState2[0],\n      setError = _useState2[1];\n\n  var _useState3 = useState(''),\n      title = _useState3[0],\n      setTitle = _useState3[1];\n\n  var _useState4 = useState(''),\n      image = _useState4[0],\n      setImage = _useState4[1];\n\n  var _useState5 = useState(''),\n      colour = _useState5[0],\n      setColour = _useState5[1];\n\n  var _useState6 = useState(''),\n      colourHex = _useState6[0],\n      setColourHex = _useState6[1];\n\n  var _useState7 = useState(''),\n      colourHexLight = _useState7[0],\n      setColourHexLight = _useState7[1];\n\n  var _useState8 = useState(''),\n      subtitleImage = _useState8[0],\n      setSubtitleImage = _useState8[1];\n\n  var _useState9 = useState(''),\n      subtitleText = _useState9[0],\n      setSubtitleText = _useState9[1];\n\n  var _useState10 = useState(''),\n      deckTitle = _useState10[0],\n      setDeckTitle = _useState10[1];\n\n  var _useState11 = useState(''),\n      deckParagraph = _useState11[0],\n      setDeckParagraph = _useState11[1];\n\n  var _useState12 = useState([]),\n      contents = _useState12[0],\n      setContents = _useState12[1];\n\n  var router = useRouter();\n  var asPath = router.asPath;\n  useEffect(function () {\n    getData(\"data/pages\".concat(asPath.split(' ').join('-').split('%20').join('-').toLowerCase(), \".json\")).then(function (data) {\n      setTitle(data.title);\n      setImage(data.header.image);\n\n      var _getAllColours = getAllColours(getMenuColour(data)),\n          _getAllColours2 = _slicedToArray(_getAllColours, 3),\n          colour = _getAllColours2[0],\n          colourHex = _getAllColours2[1],\n          colourHexLight = _getAllColours2[2];\n\n      setColour(colour);\n      setColourHex(colourHex);\n      setColourHexLight(colourHexLight);\n      setSubtitleText(data.subtitle.subtitle);\n      setSubtitleImage(data.subtitle && data.subtitle.image && url + data.subtitle.image.slice(1));\n      setDeckTitle(data.deck && data.deck.title);\n      setDeckParagraph(data.deck && data.deck.paragraph);\n      setContents(data.contents);\n      setLoading(false);\n    })[\"catch\"](function (e) {\n      console.log(e);\n      setError(true);\n      setLoading(false);\n    });\n  }, []);\n  if (loading) return __jsx(\"div\", null);\n  if (error) return __jsx(React.Fragment, null, Router.replaceRoute('/404'));\n  return __jsx(\"div\", null, __jsx(Head, null, __jsx(\"title\", {\n    key: \"title\"\n  }, title, \" - Gateway Church, York\")), __jsx(Header, {\n    colour: colour,\n    colourHex: colourHex,\n    colourHexLight: colourHexLight,\n    title: title,\n    image: image,\n    Header: HeaderContainer\n  }), __jsx(Container, null, subtitleImage && __jsx(ImageWrapper, null, __jsx(Image, {\n    url: subtitleImage\n  }), __jsx(Container, null, __jsx(PageSummary, {\n    color: colourHex\n  }, subtitleText)))), __jsx(PageDeck, {\n    colour: colourHex\n  }, __jsx(Container, null, deckTitle && __jsx(H2, null, deckTitle), deckParagraph && __jsx(P, null, deckParagraph))), __jsx(Container, null, __jsx(Contents, {\n    contents: contents\n  })), __jsx(Footer, null));\n};\n\nexport default Page;",
  "map": null,
  "metadata": {},
  "sourceType": "module"
}

{
  "ast": null,
  "code": "var __jsx = React.createElement;\nimport React, { useState, useEffect } from 'react';\nimport styled from 'styled-components';\nimport moment from 'moment';\nimport { useRouter } from 'next/router';\nimport Head from 'next/head';\nimport { markdown } from 'markdown';\nimport Link from 'next/link';\nimport Header from '../../templates/Header';\nimport Footer from '../../templates/Footer';\nimport HeaderContainer from '../../components/HeaderContainer';\nimport Container from '../../components/Container';\nimport Image from '../../components/Image';\nimport Clearfix from '../../components/Clearfix';\nimport { getMenuColour, getFullUrl, getData, getAllColours } from '../../helpers';\nconst Subtitle = styled.div`\n  height: 200px;\n  position: relative;\n  background-color: ${props => props.colour};\n  color: white;\n  text-decoration: none;\n\n  @media screen and (min-width: 768px) {\n    height: 500px;\n  }\n`;\nconst Title = styled.h2`\n  font-size: 30px;\n  line-height: 1.5em;\n  color: #fff;\n  text-align: center;\n  position: absolute;\n  top: 50%;\n  left: 0;\n  right: 0;\n  transform: translateY(-50%);\n\n  @media screen and (min-width: 768px) {\n    font-size: 90px;\n  }\n`;\nconst ContentLeft = styled.div`\n  padding: 20px;\n  background-color: ${props => props.colour};\n  color: white;\n  line-height: 1.3em;\n  margin-bottom: 60px;\n\n  @media screen and (min-width: 991px) {\n    float: left;\n    width: calc(40% - 40px);\n  }\n`;\nconst ContentRight = styled.div`\n  padding: 20px;\n  background-color: ${props => props.colour};\n  color: white;\n  line-height: 1.3em;\n  margin-bottom: 60px;\n\n  @media screen and (min-width: 991px) {\n    float: right;\n    width: calc(60% - 40px);\n  }\n\n  li {\n    list-style: inside;\n    margin-bottom: 10px;\n  }\n`;\nconst StyledLink = styled.a`\n  color: ${props => props.colour};\n  display: inline-block;\n  border: 3px solid ${props => props.colour};\n  padding: 10px;\n  border-radius: 5px;\n  margin-top: 10px;\n`;\nconst Article = styled.div`\n  p {\n    margin-bottom: 1em;\n  }\n`;\n\nconst Event = () => {\n  const {\n    0: loading,\n    1: setLoading\n  } = useState(true);\n  const {\n    0: title,\n    1: setTitle\n  } = useState('');\n  const {\n    0: image,\n    1: setImage\n  } = useState('');\n  const {\n    0: dateTime,\n    1: setDateTime\n  } = useState('');\n  const {\n    0: time,\n    1: setTime\n  } = useState('');\n  const {\n    0: article,\n    1: setArticle\n  } = useState('');\n  const {\n    0: colour,\n    1: setColour\n  } = useState('');\n  const {\n    0: colourHex,\n    1: setColourHex\n  } = useState('');\n  const {\n    0: colourHexLight,\n    1: setColourHexLight\n  } = useState('');\n  const {\n    0: pathname,\n    1: setPathname\n  } = useState('');\n  const router = useRouter();\n  const {\n    query: {\n      id\n    }\n  } = router;\n  useEffect(() => {\n    if (!id) return;\n    setPathname(id.split(' ').join('-').split('%20').join('-').toLowerCase());\n  }, [id]);\n  useEffect(() => {\n    if (pathname.length === 0) return;\n    getData(`data/events/${pathname}.json`).then(data => {\n      const [colour, colourHex, colourHexLight] = getAllColours(getMenuColour(data));\n      setColour(colour);\n      setColourHex(colourHex);\n      setColourHexLight(colourHexLight);\n      setDateTime(moment(data.dateTime).format('dddd DD MMM YYYY'));\n      setTime(moment(data.dateTime).format('HH:mm'));\n      setTitle(data.title);\n      setImage(data.image);\n      setArticle(data.article);\n      setLoading(false);\n    });\n  }, [pathname]);\n  if (!id) return null;\n  if (loading) return null;\n  return __jsx(React.Fragment, null, __jsx(Head, null, __jsx(\"title\", {\n    key: \"title\"\n  }, title, \" - Gateway Church, York\")), __jsx(Header, {\n    colour: colour,\n    colourHex: colourHex,\n    colourHexLight: colourHexLight,\n    Header: HeaderContainer\n  }), __jsx(\"main\", null, __jsx(Subtitle, {\n    colour: colourHex\n  }, __jsx(Image, {\n    url: getFullUrl(image)\n  }), __jsx(Title, null, title)), __jsx(Container, null, __jsx(ContentLeft, {\n    colour: colourHexLight\n  }, __jsx(\"div\", null, dateTime), __jsx(\"div\", null, time)), __jsx(ContentRight, {\n    colour: colourHex\n  }, article && __jsx(React.Fragment, null, __jsx(Article, {\n    dangerouslySetInnerHTML: {\n      __html: markdown.toHTML(article)\n    }\n  }), __jsx(Link, {\n    href: \"/events\",\n    passHref: true\n  }, __jsx(StyledLink, {\n    colour: colourHexLight\n  }, \"View a list of all events\")))), __jsx(Clearfix, null))), __jsx(Footer, null));\n};\n\nexport default Event;",
  "map": null,
  "metadata": {},
  "sourceType": "module"
}

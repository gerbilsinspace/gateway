{
  "ast": null,
  "code": "import _Object$values from \"@babel/runtime-corejs2/core-js/object/values\";\nimport _slicedToArray from \"@babel/runtime-corejs2/helpers/esm/slicedToArray\";\nimport _taggedTemplateLiteral from \"@babel/runtime-corejs2/helpers/esm/taggedTemplateLiteral\";\n\nfunction _templateObject7() {\n  var data = _taggedTemplateLiteral([\"\\n  background: \", \";\\n\\n  @media screen and (min-width: 991px) {\\n    float: right;\\n    width: 40%;\\n    height: 500px;\\n    margin-bottom: 20px;\\n  }\\n\"]);\n\n  _templateObject7 = function _templateObject7() {\n    return data;\n  };\n\n  return data;\n}\n\nfunction _templateObject6() {\n  var data = _taggedTemplateLiteral([\"\\n  background-color: \", \";\\n  color: white;\\n  padding: 0 35px 35px;\\n\\n  @media screen and (min-width: 991px) {\\n    padding-bottom: 154px;\\n    margin-bottom: 20px;\\n  }\\n\"]);\n\n  _templateObject6 = function _templateObject6() {\n    return data;\n  };\n\n  return data;\n}\n\nfunction _templateObject5() {\n  var data = _taggedTemplateLiteral([\"\\n  color: white;\\n\"]);\n\n  _templateObject5 = function _templateObject5() {\n    return data;\n  };\n\n  return data;\n}\n\nfunction _templateObject4() {\n  var data = _taggedTemplateLiteral([\"\\n  color: \", \";\\n\"]);\n\n  _templateObject4 = function _templateObject4() {\n    return data;\n  };\n\n  return data;\n}\n\nfunction _templateObject3() {\n  var data = _taggedTemplateLiteral([\"\\n  border-bottom: 2px solid white;\\n  padding-bottom: 20px;\\n  margin-bottom: 20px;\\n\"]);\n\n  _templateObject3 = function _templateObject3() {\n    return data;\n  };\n\n  return data;\n}\n\nfunction _templateObject2() {\n  var data = _taggedTemplateLiteral([\"\\n  padding: 35px;\\n  background-color: \", \";\\n  color: white;\\n  line-height: 1.3em;\\n\"]);\n\n  _templateObject2 = function _templateObject2() {\n    return data;\n  };\n\n  return data;\n}\n\nfunction _templateObject() {\n  var data = _taggedTemplateLiteral([\"\\n  padding: 20px 35px;\\n  color: \", \";\\n  background: white;\\n\"]);\n\n  _templateObject = function _templateObject() {\n    return data;\n  };\n\n  return data;\n}\n\nimport React, { useState, useEffect } from 'react';\nimport moment from 'moment';\nimport { Link } from '../router';\nimport styled from 'styled-components';\nimport { getData } from '../helpers';\nvar H3 = styled.h3(_templateObject(), function (props) {\n  return props.colour;\n});\nvar UL = styled.ul(_templateObject2(), function (props) {\n  return props.colour;\n});\nvar LI = styled.li(_templateObject3());\nvar P = styled.p(_templateObject4(), function (props) {\n  return props.colour;\n});\nvar StyledLink = styled.a(_templateObject5());\nvar MoreEvents = styled.div(_templateObject6(), function (props) {\n  return props.colour;\n});\nvar EventsWrapper = styled.div(_templateObject7(), function (props) {\n  return props.colour;\n});\n\nvar SimpleEvents = function SimpleEvents(_ref) {\n  var colour = _ref.colour,\n      colourLight = _ref.colourLight;\n\n  var _useState = useState([]),\n      _useState2 = _slicedToArray(_useState, 2),\n      loading = _useState2[0],\n      setLoading = _useState2[1];\n\n  var _useState3 = useState([]),\n      _useState4 = _slicedToArray(_useState3, 2),\n      events = _useState4[0],\n      setEvents = _useState4[1];\n\n  useEffect(function () {\n    getData('data/events/index.json').then(function (data) {\n      var events = _Object$values(data).map(function (event) {\n        return event.data;\n      });\n\n      setEvents(events.filter(function (event) {\n        return event.dateTime;\n      }).sort(function (a, b) {\n        return moment(a.dateTime).isAfter(b.dateTime) ? 1 : -1;\n      }).filter(function (event) {\n        return moment().isBefore(event.dateTime);\n      }).slice(0, 3));\n      setLoading(false);\n    });\n  }, []);\n  if (loading) return React.createElement(\"div\", null);\n  return React.createElement(EventsWrapper, {\n    colour: colourLight\n  }, React.createElement(H3, {\n    colour: colour\n  }, \"Events\"), React.createElement(UL, {\n    colour: colourLight\n  }, events.map(function (event) {\n    return React.createElement(LI, {\n      key: event.title\n    }, React.createElement(Link, {\n      href: \"/events/\".concat(event.title)\n    }, React.createElement(StyledLink, null, React.createElement(P, {\n      colour: colour\n    }, moment(event.dateTime).format('dddd MMM Do YYYY')), React.createElement(\"p\", null, event.title.split('-').map(function (word) {\n      return word[0].toUpperCase() + word.substr(1);\n    }).join(' ')), React.createElement(\"p\", null, moment(event.dateTime).format('kk:mm')))));\n  })), React.createElement(MoreEvents, {\n    colour: colourLight\n  }, React.createElement(Link, {\n    href: \"/events\"\n  }, React.createElement(StyledLink, null, \"More Events\"))));\n};\n\nexport default SimpleEvents;",
  "map": {
    "version": 3,
    "sources": ["/Users/joeabell/dev/gateway/components/SimpleEvents.js"],
    "names": [
      "React",
      "useState",
      "useEffect",
      "moment",
      "Link",
      "styled",
      "getData",
      "H3",
      "h3",
      "props",
      "colour",
      "UL",
      "ul",
      "LI",
      "li",
      "P",
      "p",
      "StyledLink",
      "a",
      "MoreEvents",
      "div",
      "EventsWrapper",
      "SimpleEvents",
      "colourLight",
      "loading",
      "setLoading",
      "events",
      "setEvents",
      "then",
      "data",
      "map",
      "event",
      "filter",
      "dateTime",
      "sort",
      "b",
      "isAfter",
      "isBefore",
      "slice",
      "title",
      "format",
      "split",
      "word",
      "toUpperCase",
      "substr",
      "join"
    ],
    "mappings": "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",
    "sourcesContent": [
      "import React, {useState, useEffect} from 'react';\nimport moment from 'moment';\nimport {Link} from '../router';\nimport styled from 'styled-components';\n\nimport {getData} from '../helpers';\n\nconst H3 = styled.h3`\n  padding: 20px 35px;\n  color: ${props => props.colour};\n  background: white;\n`;\n\nconst UL = styled.ul`\n  padding: 35px;\n  background-color: ${props => props.colour};\n  color: white;\n  line-height: 1.3em;\n`;\n\nconst LI = styled.li`\n  border-bottom: 2px solid white;\n  padding-bottom: 20px;\n  margin-bottom: 20px;\n`;\n\nconst P = styled.p`\n  color: ${props => props.colour};\n`;\n\nconst StyledLink = styled.a`\n  color: white;\n`;\n\nconst MoreEvents = styled.div`\n  background-color: ${props => props.colour};\n  color: white;\n  padding: 0 35px 35px;\n\n  @media screen and (min-width: 991px) {\n    padding-bottom: 154px;\n    margin-bottom: 20px;\n  }\n`;\n\nconst EventsWrapper = styled.div`\n  background: ${props => props.colour};\n\n  @media screen and (min-width: 991px) {\n    float: right;\n    width: 40%;\n    height: 500px;\n    margin-bottom: 20px;\n  }\n`;\n\nconst SimpleEvents = ({colour, colourLight}) => {\n  const [loading, setLoading] = useState([]);\n  const [events, setEvents] = useState([]);\n\n  useEffect(() => {\n    getData('data/events/index.json').then(data => {\n      const events = Object.values(data).map(event => event.data);\n\n      setEvents(\n        events\n          .filter(event => event.dateTime)\n          .sort((a, b) => (moment(a.dateTime).isAfter(b.dateTime) ? 1 : -1))\n          .filter(event => moment().isBefore(event.dateTime))\n          .slice(0, 3)\n      );\n\n      setLoading(false);\n    });\n  }, []);\n\n  if (loading) return <div />;\n\n  return (\n    <EventsWrapper colour={colourLight}>\n      <H3 colour={colour}>Events</H3>\n      <UL colour={colourLight}>\n        {events.map(event => (\n          <LI key={event.title}>\n            <Link href={`/events/${event.title}`}>\n              <StyledLink>\n                <P colour={colour}>\n                  {moment(event.dateTime).format('dddd MMM Do YYYY')}\n                </P>\n                <p>\n                  {event.title\n                    .split('-')\n                    .map(word => word[0].toUpperCase() + word.substr(1))\n                    .join(' ')}\n                </p>\n                <p>{moment(event.dateTime).format('kk:mm')}</p>\n              </StyledLink>\n            </Link>\n          </LI>\n        ))}\n      </UL>\n      <MoreEvents colour={colourLight}>\n        <Link href=\"/events\">\n          <StyledLink>More Events</StyledLink>\n        </Link>\n      </MoreEvents>\n    </EventsWrapper>\n  );\n};\n\nexport default SimpleEvents;\n"
    ]
  },
  "metadata": {},
  "sourceType": "module"
}

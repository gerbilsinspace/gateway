{
  "ast": null,
  "code": "var __jsx = React.createElement;\n\nfunction _defineProperty(obj, key, value) { if (key in obj) { Object.defineProperty(obj, key, { value: value, enumerable: true, configurable: true, writable: true }); } else { obj[key] = value; } return obj; }\n\nimport React from 'react';\nimport styled from 'styled-components';\nimport { FaBars, FaSearch } from 'react-icons/fa';\nimport { Link } from '../router';\nimport { HideAt, ShowAt } from 'react-with-breakpoints';\n\nconst Logo = ({\n  logoUrl\n}) => __jsx(\"img\", {\n  src: logoUrl,\n  alt: \"logo\"\n});\n\nconst StyledLogo = styled.div`\n  padding: 0 20px 1px;\n  text-align: center;\n\n  @media screen and (min-width: 991px) {\n    float: left;\n  }\n`;\nconst StyledLink = styled.a`\n  padding-top: 15px;\n  display: inline-block;\n`;\nconst MenuContainer = styled.div`\n  height: 60px;\n  position: ${props => props.stickyMenu ? 'sticky' : 'static'};\n  top: 0;\n  z-index: 2;\n  background: #fff;\n`;\nconst MenuInnerContainer = styled.div`\n  @media screen and (min-width: 1241px) {\n    width: 1200px;\n    margin: 0 auto;\n  }\n`;\nconst MenuButton = styled.div`\n  height: 60px;\n  width: 60px;\n  float: left;\n  cursor: pointer;\n  line-height: 60px;\n  margin: 0 auto;\n  font-size: 30px;\n  color: ${props => props.colour};\n\n  svg {\n    display: block;\n    padding-top: 15px;\n    padding-left: 15px;\n  }\n`;\nconst SearchButton = styled.div`\n  height: 60px;\n  width: 60px;\n  float: right;\n  cursor: pointer;\n  line-height: 60px;\n  margin: 0 auto;\n  font-size: 30px;\n  color: ${props => props.colour};\n\n  svg {\n    display: block;\n    padding-top: 15px;\n    padding-left: 15px;\n  }\n`;\nconst MainMenu = styled.ul`\n  display: flex;\n  padding-left: 50px;\n`;\nconst MenuItem = styled.li`\n  flex: 1 1 auto;\n  text-align: center;\n  line-height: 60px;\n  color: ${props => props.colour};\n\n  &:hover ul {\n    display: block;\n  }\n`;\nconst StyledMenuLink = styled.a`\n  color: ${props => props.colour};\n\n  &:hover {\n    border-bottom: 5px solid ${props => props.colour};\n  }\n`;\nconst ChildMenu = styled.ul`\n  display: none;\n  background: white;\n  text-align: left;\n  position: absolute;\n  z-index: 2;\n  padding-bottom: 10px;\n`;\nconst ChildLink = styled.a`\n  display: block;\n  padding: 0 20px;\n  line-height: 30px;\n  color: ${props => props.colour};\n\n  &:hover {\n    span {\n      border-bottom-color: ${props => props.colour};\n    }\n  }\n`;\nconst ChildUnderline = styled.span`\n  display: inline-block;\n  border-bottom: 5px solid white;\n`;\n\nclass Menu extends React.Component {\n  constructor(props) {\n    super(props);\n\n    _defineProperty(this, \"componentDidMount\", () => {\n      window.addEventListener('scroll', this.handleScroll);\n    });\n\n    _defineProperty(this, \"componentWillUnmount\", () => {\n      window.removeEventListener('scroll', this.handleScroll);\n    });\n\n    _defineProperty(this, \"handleScroll\", () => {\n      if (this.state.alwaysSticky) {\n        return;\n      }\n\n      if (window.scrollY >= 200 && !this.state.stickyMenu) {\n        this.setState({\n          stickyMenu: true\n        });\n      } else if (window.scrollY < 200 && this.state.stickyMenu) {\n        this.setState({\n          stickyMenu: false\n        });\n      }\n    });\n\n    this.state = {\n      stickyMenu: props.sticky || false,\n      alwaysSticky: props.sticky || false\n    };\n  }\n\n  render() {\n    const {\n      logoUrl,\n      onMenuClick,\n      onSearchClick,\n      colour,\n      menuItems\n    } = this.props;\n    const {\n      stickyMenu\n    } = this.state;\n    return __jsx(MenuContainer, {\n      classname: \"menu\",\n      stickyMenu: stickyMenu\n    }, __jsx(MenuInnerContainer, null, __jsx(ShowAt, {\n      breakpoint: \"mediumAndBelow\"\n    }, __jsx(MenuButton, {\n      onClick: onMenuClick,\n      colour: colour\n    }, __jsx(FaBars, null))), __jsx(SearchButton, {\n      onClick: onSearchClick,\n      colour: colour\n    }, __jsx(FaSearch, null)), __jsx(StyledLogo, null, __jsx(Link, {\n      href: \"/\",\n      prefetch: true\n    }, __jsx(StyledLink, null, __jsx(Logo, {\n      logoUrl: logoUrl\n    })))), __jsx(HideAt, {\n      breakpoint: \"mediumAndBelow\"\n    }, __jsx(\"nav\", null, __jsx(MainMenu, null, menuItems.map(item => __jsx(MenuItem, {\n      colour: colour,\n      key: item.link\n    }, __jsx(Link, {\n      href: item.link\n    }, __jsx(StyledMenuLink, {\n      colour: colour,\n      href: item.link\n    }, item.title)), item.childMenu && item.childMenu.length && __jsx(ChildMenu, null, item.childMenu.map(childItem => __jsx(\"li\", {\n      key: childItem.link\n    }, __jsx(Link, {\n      href: childItem.link,\n      prefetch: true\n    }, __jsx(ChildLink, {\n      colour: colour,\n      href: childItem.link\n    }, __jsx(ChildUnderline, null, childItem.title)))))))))))));\n  }\n\n}\n\nexport default Menu;",
  "map": null,
  "metadata": {},
  "sourceType": "module"
}

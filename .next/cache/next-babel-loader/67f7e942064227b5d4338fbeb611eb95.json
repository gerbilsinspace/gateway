{
  "ast": null,
  "code": "var _jsxFileName = \"/home/joe/dev/gateway/components/SimpleEvents.js\";\nvar __jsx = React.createElement;\nimport React, { useState, useEffect } from 'react';\nimport moment from 'moment';\nimport Link from 'next/link';\nimport styled from 'styled-components';\nimport { getData } from '../helpers';\nconst H3 = styled.h3`\n  padding: 20px 35px;\n  color: ${props => props.colour};\n  background: white;\n`;\nconst UL = styled.ul`\n  padding: 35px;\n  background-color: ${props => props.colour};\n  color: white;\n  line-height: 1.3em;\n`;\nconst LI = styled.li`\n  border-bottom: 2px solid white;\n  padding-bottom: 20px;\n  margin-bottom: 20px;\n`;\nconst P = styled.p`\n  color: ${props => props.colour};\n`;\nconst StyledLink = styled.a`\n  color: white;\n`;\nconst MoreEvents = styled.div`\n  background-color: ${props => props.colour};\n  color: white;\n  padding: 0 35px 35px;\n\n  @media screen and (min-width: 991px) {\n    padding-bottom: 154px;\n    margin-bottom: 20px;\n  }\n`;\nconst EventsWrapper = styled.div`\n  background: ${props => props.colour};\n\n  @media screen and (min-width: 991px) {\n    float: right;\n    width: 40%;\n    height: 500px;\n    margin-bottom: 20px;\n  }\n`;\n\nconst SimpleEvents = ({\n  colour,\n  colourLight\n}) => {\n  const {\n    0: loading,\n    1: setLoading\n  } = useState([]);\n  const {\n    0: events,\n    1: setEvents\n  } = useState([]);\n  useEffect(() => {\n    getData('data/events/index.json').then(data => {\n      const events = Object.values(data).map(event => event.data);\n      setEvents(events.filter(event => event.dateTime).sort((a, b) => moment(a.dateTime).isAfter(b.dateTime) ? 1 : -1).filter(event => moment().isBefore(event.dateTime)).slice(0, 3));\n      setLoading(false);\n    });\n  }, []);\n  if (loading) return __jsx(\"div\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 77,\n      columnNumber: 23\n    }\n  });\n  return __jsx(EventsWrapper, {\n    colour: colourLight,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 80,\n      columnNumber: 5\n    }\n  }, __jsx(H3, {\n    colour: colour,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 81,\n      columnNumber: 7\n    }\n  }, \"Events\"), __jsx(UL, {\n    colour: colourLight,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 82,\n      columnNumber: 7\n    }\n  }, events.map(event => __jsx(LI, {\n    key: event.title,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 84,\n      columnNumber: 11\n    }\n  }, __jsx(Link, {\n    href: `/events/${event.title}`,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 85,\n      columnNumber: 13\n    }\n  }, __jsx(StyledLink, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 86,\n      columnNumber: 15\n    }\n  }, __jsx(P, {\n    colour: colour,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 87,\n      columnNumber: 17\n    }\n  }, moment(event.dateTime).format('dddd MMM Do YYYY')), __jsx(\"p\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 90,\n      columnNumber: 17\n    }\n  }, event.title.split('-').map(word => word[0].toUpperCase() + word.substr(1)).join(' ')), __jsx(\"p\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 96,\n      columnNumber: 17\n    }\n  }, moment(event.dateTime).format('kk:mm'))))))), __jsx(MoreEvents, {\n    colour: colourLight,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 102,\n      columnNumber: 7\n    }\n  }, __jsx(Link, {\n    href: \"/events\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 103,\n      columnNumber: 9\n    }\n  }, __jsx(StyledLink, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 104,\n      columnNumber: 11\n    }\n  }, \"More Events\"))));\n};\n\nexport default SimpleEvents;",
  "map": {
    "version": 3,
    "sources": ["/home/joe/dev/gateway/components/SimpleEvents.js"],
    "names": [
      "React",
      "useState",
      "useEffect",
      "moment",
      "Link",
      "styled",
      "getData",
      "H3",
      "h3",
      "props",
      "colour",
      "UL",
      "ul",
      "LI",
      "li",
      "P",
      "p",
      "StyledLink",
      "a",
      "MoreEvents",
      "div",
      "EventsWrapper",
      "SimpleEvents",
      "colourLight",
      "loading",
      "setLoading",
      "events",
      "setEvents",
      "then",
      "data",
      "Object",
      "values",
      "map",
      "event",
      "filter",
      "dateTime",
      "sort",
      "b",
      "isAfter",
      "isBefore",
      "slice",
      "title",
      "format",
      "split",
      "word",
      "toUpperCase",
      "substr",
      "join"
    ],
    "mappings": ";;AAAA,OAAOA,KAAP,IAAeC,QAAf,EAAyBC,SAAzB,QAAyC,OAAzC;AACA,OAAOC,MAAP,MAAmB,QAAnB;AACA,OAAOC,IAAP,MAAiB,WAAjB;AACA,OAAOC,MAAP,MAAmB,mBAAnB;AAEA,SAAQC,OAAR,QAAsB,YAAtB;AAEA,MAAMC,EAAE,GAAGF,MAAM,CAACG,EAAG;;WAEVC,KAAK,IAAIA,KAAK,CAACC,MAAO;;CAFjC;AAMA,MAAMC,EAAE,GAAGN,MAAM,CAACO,EAAG;;sBAECH,KAAK,IAAIA,KAAK,CAACC,MAAO;;;CAF5C;AAOA,MAAMG,EAAE,GAAGR,MAAM,CAACS,EAAG;;;;CAArB;AAMA,MAAMC,CAAC,GAAGV,MAAM,CAACW,CAAE;WACRP,KAAK,IAAIA,KAAK,CAACC,MAAO;CADjC;AAIA,MAAMO,UAAU,GAAGZ,MAAM,CAACa,CAAE;;CAA5B;AAIA,MAAMC,UAAU,GAAGd,MAAM,CAACe,GAAI;sBACRX,KAAK,IAAIA,KAAK,CAACC,MAAO;;;;;;;;CAD5C;AAWA,MAAMW,aAAa,GAAGhB,MAAM,CAACe,GAAI;gBACjBX,KAAK,IAAIA,KAAK,CAACC,MAAO;;;;;;;;CADtC;;AAWA,MAAMY,YAAY,GAAG,CAAC;AAACZ,EAAAA,MAAD;AAASa,EAAAA;AAAT,CAAD,KAA2B;AAC9C,QAAM;AAAA,OAACC,OAAD;AAAA,OAAUC;AAAV,MAAwBxB,QAAQ,CAAC,EAAD,CAAtC;AACA,QAAM;AAAA,OAACyB,MAAD;AAAA,OAASC;AAAT,MAAsB1B,QAAQ,CAAC,EAAD,CAApC;AAEAC,EAAAA,SAAS,CAAC,MAAM;AACdI,IAAAA,OAAO,CAAC,wBAAD,CAAP,CAAkCsB,IAAlC,CAAuCC,IAAI,IAAI;AAC7C,YAAMH,MAAM,GAAGI,MAAM,CAACC,MAAP,CAAcF,IAAd,EAAoBG,GAApB,CAAwBC,KAAK,IAAIA,KAAK,CAACJ,IAAvC,CAAf;AAEAF,MAAAA,SAAS,CACPD,MAAM,CACHQ,MADH,CACUD,KAAK,IAAIA,KAAK,CAACE,QADzB,EAEGC,IAFH,CAEQ,CAAClB,CAAD,EAAImB,CAAJ,KAAWlC,MAAM,CAACe,CAAC,CAACiB,QAAH,CAAN,CAAmBG,OAAnB,CAA2BD,CAAC,CAACF,QAA7B,IAAyC,CAAzC,GAA6C,CAAC,CAFjE,EAGGD,MAHH,CAGUD,KAAK,IAAI9B,MAAM,GAAGoC,QAAT,CAAkBN,KAAK,CAACE,QAAxB,CAHnB,EAIGK,KAJH,CAIS,CAJT,EAIY,CAJZ,CADO,CAAT;AAQAf,MAAAA,UAAU,CAAC,KAAD,CAAV;AACD,KAZD;AAaD,GAdQ,EAcN,EAdM,CAAT;AAgBA,MAAID,OAAJ,EAAa,OAAO;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IAAP;AAEb,SACE,MAAC,aAAD;AAAe,IAAA,MAAM,EAAED,WAAvB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KACE,MAAC,EAAD;AAAI,IAAA,MAAM,EAAEb,MAAZ;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,cADF,EAEE,MAAC,EAAD;AAAI,IAAA,MAAM,EAAEa,WAAZ;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KACGG,MAAM,CAACM,GAAP,CAAWC,KAAK,IACf,MAAC,EAAD;AAAI,IAAA,GAAG,EAAEA,KAAK,CAACQ,KAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KACE,MAAC,IAAD;AAAM,IAAA,IAAI,EAAG,WAAUR,KAAK,CAACQ,KAAM,EAAnC;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KACE,MAAC,UAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KACE,MAAC,CAAD;AAAG,IAAA,MAAM,EAAE/B,MAAX;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KACGP,MAAM,CAAC8B,KAAK,CAACE,QAAP,CAAN,CAAuBO,MAAvB,CAA8B,kBAA9B,CADH,CADF,EAIE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KACGT,KAAK,CAACQ,KAAN,CACEE,KADF,CACQ,GADR,EAEEX,GAFF,CAEMY,IAAI,IAAIA,IAAI,CAAC,CAAD,CAAJ,CAAQC,WAAR,KAAwBD,IAAI,CAACE,MAAL,CAAY,CAAZ,CAFtC,EAGEC,IAHF,CAGO,GAHP,CADH,CAJF,EAUE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KAAI5C,MAAM,CAAC8B,KAAK,CAACE,QAAP,CAAN,CAAuBO,MAAvB,CAA8B,OAA9B,CAAJ,CAVF,CADF,CADF,CADD,CADH,CAFF,EAsBE,MAAC,UAAD;AAAY,IAAA,MAAM,EAAEnB,WAApB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KACE,MAAC,IAAD;AAAM,IAAA,IAAI,EAAC,SAAX;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KACE,MAAC,UAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,mBADF,CADF,CAtBF,CADF;AA8BD,CApDD;;AAsDA,eAAeD,YAAf",
    "sourcesContent": [
      "import React, {useState, useEffect} from 'react';\nimport moment from 'moment';\nimport Link from 'next/link';\nimport styled from 'styled-components';\n\nimport {getData} from '../helpers';\n\nconst H3 = styled.h3`\n  padding: 20px 35px;\n  color: ${props => props.colour};\n  background: white;\n`;\n\nconst UL = styled.ul`\n  padding: 35px;\n  background-color: ${props => props.colour};\n  color: white;\n  line-height: 1.3em;\n`;\n\nconst LI = styled.li`\n  border-bottom: 2px solid white;\n  padding-bottom: 20px;\n  margin-bottom: 20px;\n`;\n\nconst P = styled.p`\n  color: ${props => props.colour};\n`;\n\nconst StyledLink = styled.a`\n  color: white;\n`;\n\nconst MoreEvents = styled.div`\n  background-color: ${props => props.colour};\n  color: white;\n  padding: 0 35px 35px;\n\n  @media screen and (min-width: 991px) {\n    padding-bottom: 154px;\n    margin-bottom: 20px;\n  }\n`;\n\nconst EventsWrapper = styled.div`\n  background: ${props => props.colour};\n\n  @media screen and (min-width: 991px) {\n    float: right;\n    width: 40%;\n    height: 500px;\n    margin-bottom: 20px;\n  }\n`;\n\nconst SimpleEvents = ({colour, colourLight}) => {\n  const [loading, setLoading] = useState([]);\n  const [events, setEvents] = useState([]);\n\n  useEffect(() => {\n    getData('data/events/index.json').then(data => {\n      const events = Object.values(data).map(event => event.data);\n\n      setEvents(\n        events\n          .filter(event => event.dateTime)\n          .sort((a, b) => (moment(a.dateTime).isAfter(b.dateTime) ? 1 : -1))\n          .filter(event => moment().isBefore(event.dateTime))\n          .slice(0, 3)\n      );\n\n      setLoading(false);\n    });\n  }, []);\n\n  if (loading) return <div />;\n\n  return (\n    <EventsWrapper colour={colourLight}>\n      <H3 colour={colour}>Events</H3>\n      <UL colour={colourLight}>\n        {events.map(event => (\n          <LI key={event.title}>\n            <Link href={`/events/${event.title}`}>\n              <StyledLink>\n                <P colour={colour}>\n                  {moment(event.dateTime).format('dddd MMM Do YYYY')}\n                </P>\n                <p>\n                  {event.title\n                    .split('-')\n                    .map(word => word[0].toUpperCase() + word.substr(1))\n                    .join(' ')}\n                </p>\n                <p>{moment(event.dateTime).format('kk:mm')}</p>\n              </StyledLink>\n            </Link>\n          </LI>\n        ))}\n      </UL>\n      <MoreEvents colour={colourLight}>\n        <Link href=\"/events\">\n          <StyledLink>More Events</StyledLink>\n        </Link>\n      </MoreEvents>\n    </EventsWrapper>\n  );\n};\n\nexport default SimpleEvents;\n"
    ]
  },
  "metadata": {},
  "sourceType": "module"
}

{
  "ast": null,
  "code": "import _classCallCheck from \"@babel/runtime/helpers/esm/classCallCheck\";\nimport _assertThisInitialized from \"@babel/runtime/helpers/esm/assertThisInitialized\";\nimport _inherits from \"@babel/runtime/helpers/esm/inherits\";\nimport _possibleConstructorReturn from \"@babel/runtime/helpers/esm/possibleConstructorReturn\";\nimport _getPrototypeOf from \"@babel/runtime/helpers/esm/getPrototypeOf\";\nimport _defineProperty from \"@babel/runtime/helpers/esm/defineProperty\";\nimport _taggedTemplateLiteral from \"@babel/runtime/helpers/esm/taggedTemplateLiteral\";\nvar _jsxFileName = \"/home/joe/dev/gateway/components/Audio.js\";\nvar __jsx = React.createElement;\n\nfunction _createSuper(Derived) { return function () { var Super = _getPrototypeOf(Derived), result; if (_isNativeReflectConstruct()) { var NewTarget = _getPrototypeOf(this).constructor; result = Reflect.construct(Super, arguments, NewTarget); } else { result = Super.apply(this, arguments); } return _possibleConstructorReturn(this, result); }; }\n\nfunction _isNativeReflectConstruct() { if (typeof Reflect === \"undefined\" || !Reflect.construct) return false; if (Reflect.construct.sham) return false; if (typeof Proxy === \"function\") return true; try { Date.prototype.toString.call(Reflect.construct(Date, [], function () {})); return true; } catch (e) { return false; } }\n\nfunction _templateObject5() {\n  var data = _taggedTemplateLiteral([\"\\n  color: \", \";\\n\"]);\n\n  _templateObject5 = function _templateObject5() {\n    return data;\n  };\n\n  return data;\n}\n\nfunction _templateObject4() {\n  var data = _taggedTemplateLiteral([\"\\n  width: 150px;\\n  float: right;\\n  padding: 20px 0;\\n\\n  .rc-slider-rail {\\n    background: white;\\n  }\\n\\n  .rc-slider-track {\\n    background: \", \";\\n  }\\n\\n  .rc-slider-handle {\\n    border-color: \", \";\\n  }\\n\"]);\n\n  _templateObject4 = function _templateObject4() {\n    return data;\n  };\n\n  return data;\n}\n\nfunction _templateObject3() {\n  var data = _taggedTemplateLiteral([\"\\n  width: 225px;\\n  margin-top: 20px;\\n\\n  @media screen and (min-width: 600px) {\\n    margin-top: 0;\\n    float: right;\\n  }\\n\"]);\n\n  _templateObject3 = function _templateObject3() {\n    return data;\n  };\n\n  return data;\n}\n\nfunction _templateObject2() {\n  var data = _taggedTemplateLiteral([\"\\n  background: transparent;\\n  border: 0;\\n  cursor: pointer;\\n  margin-right: 20px;\\n\"]);\n\n  _templateObject2 = function _templateObject2() {\n    return data;\n  };\n\n  return data;\n}\n\nfunction _templateObject() {\n  var data = _taggedTemplateLiteral([\"\\n  background: \", \";\\n  margin: 100px 0;\\n  padding: 20px 40px;\\n\"]);\n\n  _templateObject = function _templateObject() {\n    return data;\n  };\n\n  return data;\n}\n\nimport React from 'react';\nimport Sound from 'react-sound';\nimport Slider from 'rc-slider/lib/Slider';\nimport styled from 'styled-components';\nimport { getFullUrl } from '../helpers';\nimport Clearfix from '../components/Clearfix';\nvar AudioPlayer = styled.div(_templateObject(), function (props) {\n  return props.colour;\n});\nvar Button = styled.button(_templateObject2());\nvar SliderContainer = styled.div(_templateObject3());\nvar StyledSlider = styled(Slider)(_templateObject4(), function (props) {\n  return props.colour;\n}, function (props) {\n  return props.colour;\n});\nvar Download = styled.a(_templateObject5(), function (props) {\n  return props.colour;\n});\n\nvar Audio = /*#__PURE__*/function (_React$Component) {\n  _inherits(Audio, _React$Component);\n\n  var _super = _createSuper(Audio);\n\n  function Audio() {\n    var _this;\n\n    _classCallCheck(this, Audio);\n\n    for (var _len = arguments.length, args = new Array(_len), _key = 0; _key < _len; _key++) {\n      args[_key] = arguments[_key];\n    }\n\n    _this = _super.call.apply(_super, [this].concat(args));\n\n    _defineProperty(_assertThisInitialized(_this), \"state\", {\n      playStatus: 'STOPPED',\n      position: 0,\n      duration: 0,\n      volume: 100\n    });\n\n    _defineProperty(_assertThisInitialized(_this), \"togglePlayPause\", function () {\n      if (_this.state.playStatus === 'PLAYING') {\n        _this.pressPause();\n      } else {\n        _this.pressPlay();\n      }\n    });\n\n    _defineProperty(_assertThisInitialized(_this), \"pressPlay\", function () {\n      _this.setState({\n        playStatus: 'PLAYING'\n      });\n    });\n\n    _defineProperty(_assertThisInitialized(_this), \"pressPause\", function () {\n      _this.setState({\n        playStatus: 'PAUSED'\n      });\n    });\n\n    _defineProperty(_assertThisInitialized(_this), \"pressFastForward\", function () {\n      if (_this.state.position + 10000 > _this.state.duration) {\n        _this.setState({\n          position: _this.state.duration\n        }); // lgtm [js/react/inconsistent-state-update]\n\n      } else {\n        _this.setState({\n          position: _this.state.position + 10000\n        }); // lgtm [js/react/inconsistent-state-update]\n\n      }\n    });\n\n    _defineProperty(_assertThisInitialized(_this), \"pressBack\", function () {\n      if (_this.state.position - 10000 < 0) {\n        _this.setState({\n          position: 0\n        });\n      } else {\n        _this.setState({\n          position: _this.state.position - 10000\n        }); // lgtm [js/react/inconsistent-state-update]\n\n      }\n    });\n\n    _defineProperty(_assertThisInitialized(_this), \"setPositionAndDuration\", function (_ref) {\n      var position = _ref.position,\n          duration = _ref.duration;\n\n      _this.setState({\n        position: position,\n        duration: duration\n      });\n    });\n\n    _defineProperty(_assertThisInitialized(_this), \"setDuration\", function (_ref2) {\n      var duration = _ref2.duration;\n\n      _this.setState({\n        duration: duration\n      });\n    });\n\n    _defineProperty(_assertThisInitialized(_this), \"handleVolumeChange\", function (volume) {\n      _this.setState({\n        playStatus: 'PAUSED'\n      });\n\n      _this.setState({\n        volume: volume\n      });\n\n      _this.setState({\n        playStatus: 'PLAYING'\n      });\n    });\n\n    _defineProperty(_assertThisInitialized(_this), \"handlePlaying\", function (_ref3) {\n      var position = _ref3.position;\n\n      _this.setState({\n        position: position\n      });\n    });\n\n    _defineProperty(_assertThisInitialized(_this), \"render\", function () {\n      return __jsx(AudioPlayer, {\n        colour: _this.props.colour,\n        __self: _assertThisInitialized(_this),\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 113,\n          columnNumber: 7\n        }\n      }, __jsx(Sound, {\n        url: _this.props.url,\n        volume: _this.state.volume,\n        autoLoad: true,\n        playStatus: _this.state.playStatus,\n        position: _this.state.position,\n        onPause: _this.setPositionAndDuration,\n        onStop: _this.setPositionAndDuration,\n        onLoading: _this.setDuration,\n        onPlaying: _this.handlePlaying,\n        __self: _assertThisInitialized(_this),\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 114,\n          columnNumber: 9\n        }\n      }), __jsx(Button, {\n        onClick: _this.pressBack,\n        __self: _assertThisInitialized(_this),\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 125,\n          columnNumber: 9\n        }\n      }, __jsx(\"img\", {\n        src: getFullUrl('/uploads/rewind.png'),\n        __self: _assertThisInitialized(_this),\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 126,\n          columnNumber: 11\n        }\n      })), __jsx(Button, {\n        onClick: _this.togglePlayPause,\n        __self: _assertThisInitialized(_this),\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 128,\n          columnNumber: 9\n        }\n      }, _this.state.playStatus === 'PLAYING' && __jsx(\"img\", {\n        src: getFullUrl('/uploads/pause.png'),\n        __self: _assertThisInitialized(_this),\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 130,\n          columnNumber: 13\n        }\n      }), _this.state.playStatus === 'PAUSED' && __jsx(\"img\", {\n        src: getFullUrl('/uploads/play.png'),\n        __self: _assertThisInitialized(_this),\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 133,\n          columnNumber: 13\n        }\n      }), _this.state.playStatus === 'STOPPED' && __jsx(\"img\", {\n        src: getFullUrl('/uploads/play.png'),\n        __self: _assertThisInitialized(_this),\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 136,\n          columnNumber: 13\n        }\n      })), __jsx(Button, {\n        onClick: _this.pressFastForward,\n        __self: _assertThisInitialized(_this),\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 139,\n          columnNumber: 9\n        }\n      }, __jsx(\"img\", {\n        src: getFullUrl('/uploads/fast-forward.png'),\n        __self: _assertThisInitialized(_this),\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 140,\n          columnNumber: 11\n        }\n      })), __jsx(Download, {\n        href: _this.props.url,\n        colour: _this.props.lightColour,\n        __self: _assertThisInitialized(_this),\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 142,\n          columnNumber: 9\n        }\n      }, __jsx(\"img\", {\n        src: getFullUrl('/uploads/download.png'),\n        __self: _assertThisInitialized(_this),\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 143,\n          columnNumber: 11\n        }\n      })), __jsx(SliderContainer, {\n        __self: _assertThisInitialized(_this),\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 145,\n          columnNumber: 9\n        }\n      }, __jsx(\"img\", {\n        src: getFullUrl('/uploads/volume.png'),\n        __self: _assertThisInitialized(_this),\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 146,\n          columnNumber: 11\n        }\n      }), __jsx(StyledSlider, {\n        onChange: _this.handleVolumeChange,\n        defaultValue: 100,\n        colour: _this.props.lightColour,\n        __self: _assertThisInitialized(_this),\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 147,\n          columnNumber: 11\n        }\n      }), __jsx(Clearfix, {\n        __self: _assertThisInitialized(_this),\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 152,\n          columnNumber: 11\n        }\n      })), __jsx(Clearfix, {\n        __self: _assertThisInitialized(_this),\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 154,\n          columnNumber: 9\n        }\n      }));\n    });\n\n    return _this;\n  }\n\n  return Audio;\n}(React.Component);\n\nexport default Audio;",
  "map": {
    "version": 3,
    "sources": ["/home/joe/dev/gateway/components/Audio.js"],
    "names": [
      "React",
      "Sound",
      "Slider",
      "styled",
      "getFullUrl",
      "Clearfix",
      "AudioPlayer",
      "div",
      "props",
      "colour",
      "Button",
      "button",
      "SliderContainer",
      "StyledSlider",
      "Download",
      "a",
      "Audio",
      "playStatus",
      "position",
      "duration",
      "volume",
      "state",
      "pressPause",
      "pressPlay",
      "setState",
      "url",
      "setPositionAndDuration",
      "setDuration",
      "handlePlaying",
      "pressBack",
      "togglePlayPause",
      "pressFastForward",
      "lightColour",
      "handleVolumeChange",
      "Component"
    ],
    "mappings": "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",
    "sourcesContent": [
      "import React from 'react';\nimport Sound from 'react-sound';\nimport Slider from 'rc-slider/lib/Slider';\nimport styled from 'styled-components';\nimport { getFullUrl } from '../helpers';\nimport Clearfix from '../components/Clearfix';\n\nconst AudioPlayer = styled.div`\n  background: ${props => props.colour};\n  margin: 100px 0;\n  padding: 20px 40px;\n`;\n\nconst Button = styled.button`\n  background: transparent;\n  border: 0;\n  cursor: pointer;\n  margin-right: 20px;\n`;\n\nconst SliderContainer = styled.div`\n  width: 225px;\n  margin-top: 20px;\n\n  @media screen and (min-width: 600px) {\n    margin-top: 0;\n    float: right;\n  }\n`;\n\nconst StyledSlider = styled(Slider)`\n  width: 150px;\n  float: right;\n  padding: 20px 0;\n\n  .rc-slider-rail {\n    background: white;\n  }\n\n  .rc-slider-track {\n    background: ${props => props.colour};\n  }\n\n  .rc-slider-handle {\n    border-color: ${props => props.colour};\n  }\n`;\n\nconst Download = styled.a`\n  color: ${props => props.colour};\n`;\n\nclass Audio extends React.Component {\n  state = {\n    playStatus: 'STOPPED',\n    position: 0,\n    duration: 0,\n    volume: 100\n  };\n\n  togglePlayPause = () => {\n    if (this.state.playStatus === 'PLAYING') {\n      this.pressPause();\n    } else {\n      this.pressPlay();\n    }\n  };\n\n  pressPlay = () => {\n    this.setState({ playStatus: 'PLAYING' });\n  };\n\n  pressPause = () => {\n    this.setState({ playStatus: 'PAUSED' });\n  };\n\n  pressFastForward = () => {\n    if (this.state.position + 10000 > this.state.duration) {\n      this.setState({ position: this.state.duration }); // lgtm [js/react/inconsistent-state-update]\n    } else {\n      this.setState({ position: this.state.position + 10000 }); // lgtm [js/react/inconsistent-state-update]\n    }\n  };\n\n  pressBack = () => {\n    if (this.state.position - 10000 < 0) {\n      this.setState({ position: 0 });\n    } else {\n      this.setState({ position: this.state.position - 10000 }); // lgtm [js/react/inconsistent-state-update]\n    }\n  };\n\n  setPositionAndDuration = ({ position, duration }) => {\n    this.setState({ position, duration });\n  };\n\n  setDuration = ({ duration }) => {\n    this.setState({ duration });\n  };\n\n  handleVolumeChange = volume => {\n    this.setState({ playStatus: 'PAUSED' });\n    this.setState({ volume });\n    this.setState({ playStatus: 'PLAYING' });\n  };\n\n  handlePlaying = ({ position }) => {\n    this.setState({ position });\n  };\n\n  render = () => {\n    return (\n      <AudioPlayer colour={this.props.colour}>\n        <Sound\n          url={this.props.url}\n          volume={this.state.volume}\n          autoLoad={true}\n          playStatus={this.state.playStatus}\n          position={this.state.position}\n          onPause={this.setPositionAndDuration}\n          onStop={this.setPositionAndDuration}\n          onLoading={this.setDuration}\n          onPlaying={this.handlePlaying}\n        />\n        <Button onClick={this.pressBack}>\n          <img src={getFullUrl('/uploads/rewind.png')} />\n        </Button>\n        <Button onClick={this.togglePlayPause}>\n          {this.state.playStatus === 'PLAYING' && (\n            <img src={getFullUrl('/uploads/pause.png')} />\n          )}\n          {this.state.playStatus === 'PAUSED' && (\n            <img src={getFullUrl('/uploads/play.png')} />\n          )}\n          {this.state.playStatus === 'STOPPED' && (\n            <img src={getFullUrl('/uploads/play.png')} />\n          )}\n        </Button>\n        <Button onClick={this.pressFastForward}>\n          <img src={getFullUrl('/uploads/fast-forward.png')} />\n        </Button>\n        <Download href={this.props.url} colour={this.props.lightColour}>\n          <img src={getFullUrl('/uploads/download.png')} />\n        </Download>\n        <SliderContainer>\n          <img src={getFullUrl('/uploads/volume.png')} />\n          <StyledSlider\n            onChange={this.handleVolumeChange}\n            defaultValue={100}\n            colour={this.props.lightColour}\n          />\n          <Clearfix />\n        </SliderContainer>\n        <Clearfix />\n      </AudioPlayer>\n    );\n  };\n}\n\nexport default Audio;\n"
    ]
  },
  "metadata": {},
  "sourceType": "module"
}

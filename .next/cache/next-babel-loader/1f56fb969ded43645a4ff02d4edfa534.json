{
  "ast": null,
  "code": "var __jsx = React.createElement;\nimport React, { useState, useEffect } from 'react';\nimport styled from 'styled-components';\nimport moment from 'moment';\nimport { useRouter } from 'next/router';\nimport Head from 'next/head';\nimport { markdown } from 'markdown';\nimport { Link } from '../router';\nimport Header from '../templates/Header';\nimport Footer from '../templates/Footer';\nimport HeaderContainer from '../components/HeaderContainer';\nimport Container from '../components/Container';\nimport Image from '../components/Image';\nimport Clearfix from '../components/Clearfix';\nimport { getMenuColour, getFullUrl, getData, getAllColours } from '../helpers';\nconst Subtitle = styled.div`\n  height: 200px;\n  position: relative;\n  background-color: ${props => props.colour};\n  color: white;\n  text-decoration: none;\n\n  @media screen and (min-width: 768px) {\n    height: 500px;\n  }\n`;\nconst Title = styled.h2`\n  font-size: 30px;\n  line-height: 1.5em;\n  color: #fff;\n  text-align: center;\n  position: absolute;\n  top: 50%;\n  left: 0;\n  right: 0;\n  transform: translateY(-50%);\n\n  @media screen and (min-width: 768px) {\n    font-size: 90px;\n  }\n`;\nconst ContentLeft = styled.div`\n  padding: 20px;\n  background-color: ${props => props.colour};\n  color: white;\n  line-height: 1.3em;\n  margin-bottom: 60px;\n\n  @media screen and (min-width: 991px) {\n    float: left;\n    width: calc(40% - 40px);\n  }\n`;\nconst ContentRight = styled.div`\n  padding: 20px;\n  background-color: ${props => props.colour};\n  color: white;\n  line-height: 1.3em;\n  margin-bottom: 60px;\n\n  @media screen and (min-width: 991px) {\n    float: right;\n    width: calc(60% - 40px);\n  }\n\n  li {\n    list-style: inside;\n    margin-bottom: 10px;\n  }\n`;\nconst StyledLink = styled.a`\n  color: ${props => props.colour};\n  display: inline-block;\n  border: 3px solid ${props => props.colour};\n  padding: 10px;\n  border-radius: 5px;\n  margin-top: 10px;\n`;\nconst Article = styled.div`\n  p {\n    margin-bottom: 1em;\n  }\n`;\n\nconst Event = () => {\n  const {\n    0: loading,\n    1: setLoading\n  } = useState(true);\n  const {\n    0: title,\n    1: setTitle\n  } = useState('');\n  const {\n    0: image,\n    1: setImage\n  } = useState('');\n  const {\n    0: dateTime,\n    1: setDateTime\n  } = useState('');\n  const {\n    0: time,\n    1: setTime\n  } = useState('');\n  const {\n    0: article,\n    1: setArticle\n  } = useState('');\n  const {\n    0: colour,\n    1: setColour\n  } = useState('');\n  const {\n    0: colourHex,\n    1: setColourHex\n  } = useState('');\n  const {\n    0: colourHexLight,\n    1: setColourHexLight\n  } = useState('');\n  const router = useRouter();\n  const {\n    asPath\n  } = router;\n  const pathname = asPath.split(' ').join('-').split('%20').join('-').toLowerCase();\n  useEffect(() => {\n    getData(`data/${pathname}.json`).then(data => {\n      const [colour, colourHex, colourHexLight] = getAllColours(getMenuColour(data));\n      setColour(colour);\n      setColourHex(colourHex);\n      setColourHexLight(colourHexLight);\n      setDateTime(moment(data.dateTime).format('dddd DD MMM YYYY'));\n      setTime(moment(data.dateTime).format('HH:mm'));\n      setTitle(data.title);\n      setImage(data.image);\n      setArticle(data.article);\n      setLoading(false);\n    });\n  }, []);\n  if (loading) return __jsx(\"div\", null);\n  return __jsx(React.Fragment, null, __jsx(Head, null, __jsx(\"title\", {\n    key: \"title\"\n  }, title, \" - Gateway Church, York\")), __jsx(Header, {\n    colour: colour,\n    colourHex: colourHex,\n    colourHexLight: colourHexLight,\n    Header: HeaderContainer\n  }), __jsx(\"main\", null, __jsx(Subtitle, {\n    colour: colourHex\n  }, __jsx(Image, {\n    url: getFullUrl(image)\n  }), __jsx(Title, null, title)), __jsx(Container, null, __jsx(ContentLeft, {\n    colour: colourHexLight\n  }, __jsx(\"div\", null, dateTime), __jsx(\"div\", null, time)), __jsx(ContentRight, {\n    colour: colourHex\n  }, article && __jsx(React.Fragment, null, __jsx(Article, {\n    dangerouslySetInnerHTML: {\n      __html: markdown.toHTML(article)\n    }\n  }), __jsx(Link, {\n    href: \"/events\",\n    passHref: true\n  }, __jsx(StyledLink, {\n    colour: colourHexLight\n  }, \"View a list of all events\")))), __jsx(Clearfix, null))), __jsx(Footer, null));\n};\n\nexport default Event;",
  "map": {
    "version": 3,
    "sources": ["/home/joe/dev/gateway/pages/event.js"],
    "names": [
      "React",
      "useState",
      "useEffect",
      "styled",
      "moment",
      "useRouter",
      "Head",
      "markdown",
      "Link",
      "Header",
      "Footer",
      "HeaderContainer",
      "Container",
      "Image",
      "Clearfix",
      "getMenuColour",
      "getFullUrl",
      "getData",
      "getAllColours",
      "Subtitle",
      "div",
      "props",
      "colour",
      "Title",
      "h2",
      "ContentLeft",
      "ContentRight",
      "StyledLink",
      "a",
      "Article",
      "Event",
      "loading",
      "setLoading",
      "title",
      "setTitle",
      "image",
      "setImage",
      "dateTime",
      "setDateTime",
      "time",
      "setTime",
      "article",
      "setArticle",
      "setColour",
      "colourHex",
      "setColourHex",
      "colourHexLight",
      "setColourHexLight",
      "router",
      "asPath",
      "pathname",
      "split",
      "join",
      "toLowerCase",
      "then",
      "data",
      "format",
      "__html",
      "toHTML"
    ],
    "mappings": "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",
    "sourcesContent": [
      "import React, {useState, useEffect} from 'react';\nimport styled from 'styled-components';\nimport moment from 'moment';\nimport {useRouter} from 'next/router';\nimport Head from 'next/head';\nimport {markdown} from 'markdown';\n\nimport {Link} from '../router';\n\nimport Header from '../templates/Header';\nimport Footer from '../templates/Footer';\nimport HeaderContainer from '../components/HeaderContainer';\nimport Container from '../components/Container';\nimport Image from '../components/Image';\nimport Clearfix from '../components/Clearfix';\n\nimport {getMenuColour, getFullUrl, getData, getAllColours} from '../helpers';\n\nconst Subtitle = styled.div`\n  height: 200px;\n  position: relative;\n  background-color: ${props => props.colour};\n  color: white;\n  text-decoration: none;\n\n  @media screen and (min-width: 768px) {\n    height: 500px;\n  }\n`;\n\nconst Title = styled.h2`\n  font-size: 30px;\n  line-height: 1.5em;\n  color: #fff;\n  text-align: center;\n  position: absolute;\n  top: 50%;\n  left: 0;\n  right: 0;\n  transform: translateY(-50%);\n\n  @media screen and (min-width: 768px) {\n    font-size: 90px;\n  }\n`;\n\nconst ContentLeft = styled.div`\n  padding: 20px;\n  background-color: ${props => props.colour};\n  color: white;\n  line-height: 1.3em;\n  margin-bottom: 60px;\n\n  @media screen and (min-width: 991px) {\n    float: left;\n    width: calc(40% - 40px);\n  }\n`;\n\nconst ContentRight = styled.div`\n  padding: 20px;\n  background-color: ${props => props.colour};\n  color: white;\n  line-height: 1.3em;\n  margin-bottom: 60px;\n\n  @media screen and (min-width: 991px) {\n    float: right;\n    width: calc(60% - 40px);\n  }\n\n  li {\n    list-style: inside;\n    margin-bottom: 10px;\n  }\n`;\n\nconst StyledLink = styled.a`\n  color: ${props => props.colour};\n  display: inline-block;\n  border: 3px solid ${props => props.colour};\n  padding: 10px;\n  border-radius: 5px;\n  margin-top: 10px;\n`;\n\nconst Article = styled.div`\n  p {\n    margin-bottom: 1em;\n  }\n`;\n\nconst Event = () => {\n  const [loading, setLoading] = useState(true);\n  const [title, setTitle] = useState('');\n  const [image, setImage] = useState('');\n  const [dateTime, setDateTime] = useState('');\n  const [time, setTime] = useState('');\n  const [article, setArticle] = useState('');\n  const [colour, setColour] = useState('');\n  const [colourHex, setColourHex] = useState('');\n  const [colourHexLight, setColourHexLight] = useState('');\n  const router = useRouter();\n\n  const {asPath} = router;\n  const pathname = asPath\n    .split(' ')\n    .join('-')\n    .split('%20')\n    .join('-')\n    .toLowerCase();\n\n  useEffect(() => {\n    getData(`data/${pathname}.json`).then(data => {\n      const [colour, colourHex, colourHexLight] = getAllColours(\n        getMenuColour(data)\n      );\n      setColour(colour);\n      setColourHex(colourHex);\n      setColourHexLight(colourHexLight);\n      setDateTime(moment(data.dateTime).format('dddd DD MMM YYYY'));\n      setTime(moment(data.dateTime).format('HH:mm'));\n      setTitle(data.title);\n      setImage(data.image);\n      setArticle(data.article);\n      setLoading(false);\n    });\n  }, []);\n\n  if (loading) return <div />;\n\n  return (\n    <React.Fragment>\n      <Head>\n        <title key=\"title\">{title} - Gateway Church, York</title>\n      </Head>\n      <Header\n        colour={colour}\n        colourHex={colourHex}\n        colourHexLight={colourHexLight}\n        Header={HeaderContainer}\n      />\n      <main>\n        <Subtitle colour={colourHex}>\n          <Image url={getFullUrl(image)} />\n          <Title>{title}</Title>\n        </Subtitle>\n        <Container>\n          <ContentLeft colour={colourHexLight}>\n            <div>{dateTime}</div>\n            <div>{time}</div>\n          </ContentLeft>\n          <ContentRight colour={colourHex}>\n            {article && (\n              <>\n                <Article\n                  dangerouslySetInnerHTML={{__html: markdown.toHTML(article)}}\n                />\n                <Link href=\"/events\" passHref>\n                  <StyledLink colour={colourHexLight}>\n                    View a list of all events\n                  </StyledLink>\n                </Link>\n              </>\n            )}\n          </ContentRight>\n          <Clearfix />\n        </Container>\n      </main>\n      <Footer />\n    </React.Fragment>\n  );\n};\n\nexport default Event;\n"
    ]
  },
  "metadata": {},
  "sourceType": "module"
}

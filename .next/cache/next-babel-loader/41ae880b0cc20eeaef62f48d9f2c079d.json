{
  "ast": null,
  "code": "import _slicedToArray from \"@babel/runtime/helpers/esm/slicedToArray\";\nvar __jsx = React.createElement;\nimport React, { useState, useEffect } from 'react';\nimport { format, compareAsc } from 'date-fns';\nimport Head from 'next/head';\nimport { useRouter } from 'next/router';\nimport { Link } from '../router';\nimport Header from '../templates/Header';\nimport Footer from '../templates/Footer';\nimport HeaderContainer from '../components/HeaderContainer';\nimport PageSummary from '../components/PageSummary';\nimport Image from '../components/Image';\nimport Container from '../components/Container';\nimport Clearfix from '../components/Clearfix';\nimport StyledLink from '../components/LinkWords';\nimport StyledText from '../components/TextWords';\nimport StyledDate from '../components/DateWords';\nimport Title from '../components/H2Words';\nimport ReadMore from '../components/ReadMoreWords';\nimport StyledTextContainer from '../components/TextContainerWords';\nimport StyledHideOnMobile from '../components/HideOnMobileWords';\nimport Word from '../components/WordWords';\nimport Pagination from '../components/Pagination';\nimport StyledPagination from '../components/PaginationWords';\nimport Subtitle from '../components/Subtitle';\nimport StyledImageWrapper from '../components/ImageWrapperWords';\nimport { getData, getFullUrl, changeColourToHex, getMenuColour, getAllColours } from '../helpers';\n\nvar Words = function Words() {\n  var _useState = useState(true),\n      loading = _useState[0],\n      setLoading = _useState[1];\n\n  var _useState2 = useState(''),\n      colour = _useState2[0],\n      setColour = _useState2[1];\n\n  var _useState3 = useState(''),\n      colourHex = _useState3[0],\n      setColourHex = _useState3[1];\n\n  var _useState4 = useState(''),\n      colourHexLight = _useState4[0],\n      setColourHexLight = _useState4[1];\n\n  var _useState5 = useState(''),\n      header = _useState5[0],\n      setHeader = _useState5[1];\n\n  var _useState6 = useState(''),\n      image = _useState6[0],\n      setImage = _useState6[1];\n\n  var _useState7 = useState(''),\n      subtitle = _useState7[0],\n      setSubtitle = _useState7[1];\n\n  var _useState8 = useState(''),\n      title = _useState8[0],\n      setTitle = _useState8[1];\n\n  var _useState9 = useState(0),\n      maxPageCount = _useState9[0],\n      setMaxPageCount = _useState9[1];\n\n  var _useState10 = useState(''),\n      words = _useState10[0],\n      setWords = _useState10[1];\n\n  var _useState11 = useState(0),\n      wordsCount = _useState11[0],\n      setWordsCount = _useState11[1];\n\n  var _useState12 = useState(''),\n      currentPage = _useState12[0],\n      setCurrentPage = _useState12[1];\n\n  var router = useRouter();\n  useEffect(function () {\n    Promise.all([getData('data/words/index.json'), getData('data/pages/words.json')]).then(function (_ref) {\n      var _ref2 = _slicedToArray(_ref, 2),\n          data = _ref2[0],\n          wordsPageData = _ref2[1];\n\n      var currentPage = router && router.query && router.query.page || 1;\n      setCurrentPage(currentPage);\n\n      var _getAllColours = getAllColours(getMenuColour(data)),\n          _getAllColours2 = _slicedToArray(_getAllColours, 3),\n          colour = _getAllColours2[0],\n          colourHex = _getAllColours2[1],\n          colourHexLight = _getAllColours2[2];\n\n      setColour(colour);\n      setColourHex(colourHex);\n      setColourHexLight(colourHexLight);\n      setHeader(wordsPageData.header);\n      setImage(getFullUrl(wordsPageData.header.image));\n      setSubtitle(wordsPageData.subtitle);\n      setTitle(wordsPageData.title);\n      var words = Object.values(data).map(function (word) {\n        return word.data;\n      }).filter(function (word) {\n        return !!word.date;\n      }).sort(function (a, b) {\n        return compareAsc(new Date(b.date), new Date(a.date));\n      });\n      setWordsCount(words.length);\n      setWords(words.slice(currentPage * 10 - 10, currentPage * 10));\n      setMaxPageCount(Math.ceil(wordsCount / 10));\n      setLoading(false);\n    });\n  }, [router]);\n  if (loading) return __jsx(\"div\", null);\n\n  if (!words || words.length === 0) {\n    return __jsx(\"div\", null);\n  }\n\n  return __jsx(React.Fragment, null, __jsx(Head, null, __jsx(\"title\", {\n    key: \"title\"\n  }, \"Words - Gateway Church, York\")), __jsx(Header, {\n    colour: colour,\n    colourHex: colourHex,\n    colourHexLight: colourHexLight,\n    title: title,\n    image: image,\n    Header: HeaderContainer\n  }), subtitle && subtitle.subtitle && __jsx(PageSummary, {\n    color: colourHex\n  }, subtitle.subtitle), __jsx(Container, null, maxPageCount > 1 && __jsx(StyledPagination, {\n    color: colourHex\n  }, __jsx(Pagination, {\n    maxCount: maxPageCount,\n    currentPage: currentPage\n  })), __jsx(\"ul\", null, words.map(function (word) {\n    var authors = word.authors && word.authors.map(function (_ref3) {\n      var author = _ref3.author;\n      return author.trim();\n    }).filter(function (author) {\n      return author;\n    });\n    return __jsx(Word, {\n      key: word.title\n    }, __jsx(Link, {\n      href: \"/words/\".concat(word.slug),\n      passHref: true\n    }, __jsx(StyledLink, {\n      colour: changeColourToHex(word.colour, true)\n    }, __jsx(StyledTextContainer, null, __jsx(StyledText, null, __jsx(StyledDate, {\n      colour: changeColourToHex(word.colour)\n    }, format(word.date, 'EEEE do LLLL yyyy'), authors && authors.length > 0 && __jsx(React.Fragment, null, authors.map(function (author) {\n      return __jsx(React.Fragment, {\n        key: author\n      }, ' - ', author.split('-').map(function (word) {\n        return word[0].toUpperCase() + word.substr(1);\n      }).join(' '));\n    }))), __jsx(Title, null, word.title.split('-').map(function (word) {\n      return word[0].toUpperCase() + word.substr(1);\n    }).join(' ')), __jsx(Subtitle, null, word.subtitle)), __jsx(ReadMore, {\n      colour: changeColourToHex(word.colour)\n    }, \"Read More +\")), __jsx(StyledHideOnMobile, null, __jsx(StyledImageWrapper, {\n      colour: changeColourToHex(word.colour),\n      marginBottom: 0\n    }, __jsx(Image, {\n      url: getFullUrl(word.image)\n    }))), __jsx(Clearfix, null))));\n  }))), __jsx(Footer, null));\n};\n\nexport default Words;",
  "map": null,
  "metadata": {},
  "sourceType": "module"
}

{
  "ast": null,
  "code": "import _regeneratorRuntime from \"@babel/runtime/regenerator\";\nimport _slicedToArray from \"@babel/runtime/helpers/esm/slicedToArray\";\nimport fetch from 'isomorphic-fetch';\nimport { url as urlStart, colours } from './config';\nexport var getAllColours = function getAllColours() {\n  var colour = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : '';\n  var c = colours.find(function (c) {\n    return c.name.toLowerCase() === colour.toLowerCase();\n  });\n  return c ? [c.name, c.hex, c.hexLight] : [];\n};\nexport var changeColourToHex = function changeColourToHex(colour, lightVariant) {\n  var _getAllColours = getAllColours(colour),\n      _getAllColours2 = _slicedToArray(_getAllColours, 3),\n      hex = _getAllColours2[1],\n      hexLight = _getAllColours2[2];\n\n  return lightVariant ? hexLight : hex;\n};\nexport var getMenuColour = function getMenuColour(pageData) {\n  return pageData.header && pageData.header.menuColour || pageData.menuColour || 'red';\n};\nexport var getMenu = function getMenu() {\n  var menuUrl, menuResponse, menuData;\n  return _regeneratorRuntime.async(function getMenu$(_context) {\n    while (1) {\n      switch (_context.prev = _context.next) {\n        case 0:\n          menuUrl = urlStart + 'data/menu.json';\n          _context.next = 3;\n          return _regeneratorRuntime.awrap(fetch(menuUrl)[\"catch\"](function (e) {\n            return e;\n          }));\n\n        case 3:\n          menuResponse = _context.sent;\n          _context.next = 6;\n          return _regeneratorRuntime.awrap(menuResponse.json());\n\n        case 6:\n          menuData = _context.sent;\n          return _context.abrupt(\"return\", menuData);\n\n        case 8:\n        case \"end\":\n          return _context.stop();\n      }\n    }\n  }, null, null, null, Promise);\n};\nexport var getFullUrl = function getFullUrl() {\n  var urlEnd = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : '';\n\n  if (urlEnd.includes('http')) {\n    return urlEnd;\n  }\n\n  if (urlEnd[0] === '/') {\n    urlEnd = urlEnd.replace('/', '');\n  }\n\n  return urlStart + urlEnd;\n};\nexport var getLogo = function getLogo(menuColour) {\n  var logoLocation, logoResponse, logoData, logoUrl;\n  return _regeneratorRuntime.async(function getLogo$(_context2) {\n    while (1) {\n      switch (_context2.prev = _context2.next) {\n        case 0:\n          logoLocation = getFullUrl(\"data/logos/\".concat(menuColour || 'red', \".json\"));\n          _context2.next = 3;\n          return _regeneratorRuntime.awrap(fetch(logoLocation)[\"catch\"](function (e) {\n            return e;\n          }));\n\n        case 3:\n          logoResponse = _context2.sent;\n          _context2.next = 6;\n          return _regeneratorRuntime.awrap(logoResponse.json());\n\n        case 6:\n          logoData = _context2.sent;\n          logoUrl = getFullUrl(logoData.image);\n          return _context2.abrupt(\"return\", logoUrl);\n\n        case 9:\n        case \"end\":\n          return _context2.stop();\n      }\n    }\n  }, null, null, null, Promise);\n};\nexport var getData = function getData(pageName) {\n  var pageUrl, response, pageData;\n  return _regeneratorRuntime.async(function getData$(_context3) {\n    while (1) {\n      switch (_context3.prev = _context3.next) {\n        case 0:\n          pageUrl = urlStart + pageName;\n          _context3.next = 3;\n          return _regeneratorRuntime.awrap(fetch(pageUrl));\n\n        case 3:\n          response = _context3.sent;\n\n          if (response.ok) {\n            _context3.next = 6;\n            break;\n          }\n\n          return _context3.abrupt(\"return\", new Error('something messed up'));\n\n        case 6:\n          _context3.next = 8;\n          return _regeneratorRuntime.awrap(response.json());\n\n        case 8:\n          pageData = _context3.sent;\n          return _context3.abrupt(\"return\", pageData);\n\n        case 10:\n        case \"end\":\n          return _context3.stop();\n      }\n    }\n  }, null, null, null, Promise);\n};\nexport var getResizedImageUrl = function getResizedImageUrl(url) {\n  if (!url) {\n    return;\n  }\n\n  var pageWidth = window.innerWidth;\n\n  if (pageWidth < 768) {\n    return url.split('uploads/').join('uploads/mobile/');\n  } else if (pageWidth < 991) {\n    return url.split('uploads/').join('uploads/tablet/');\n  }\n\n  return url.split('uploads/').join('uploads/desktop/');\n};",
  "map": {
    "version": 3,
    "sources": ["/home/joe/dev/gateway/helpers/index.js"],
    "names": [
      "fetch",
      "url",
      "urlStart",
      "colours",
      "getAllColours",
      "colour",
      "c",
      "find",
      "name",
      "toLowerCase",
      "hex",
      "hexLight",
      "changeColourToHex",
      "lightVariant",
      "getMenuColour",
      "pageData",
      "header",
      "menuColour",
      "getMenu",
      "menuUrl",
      "e",
      "menuResponse",
      "json",
      "menuData",
      "getFullUrl",
      "urlEnd",
      "includes",
      "replace",
      "getLogo",
      "logoLocation",
      "logoResponse",
      "logoData",
      "logoUrl",
      "image",
      "getData",
      "pageName",
      "pageUrl",
      "response",
      "ok",
      "Error",
      "getResizedImageUrl",
      "pageWidth",
      "window",
      "innerWidth",
      "split",
      "join"
    ],
    "mappings": "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",
    "sourcesContent": [
      "import fetch from 'isomorphic-fetch';\nimport {url as urlStart, colours} from './config';\n\nexport const getAllColours = (colour = '') => {\n  const c = colours.find(c => c.name.toLowerCase() === colour.toLowerCase());\n  return c ? [c.name, c.hex, c.hexLight] : [];\n};\n\nexport const changeColourToHex = (colour, lightVariant) => {\n  const [, hex, hexLight] = getAllColours(colour);\n\n  return lightVariant ? hexLight : hex;\n};\n\nexport const getMenuColour = pageData =>\n  (pageData.header && pageData.header.menuColour) ||\n  pageData.menuColour ||\n  'red';\n\nexport const getMenu = async () => {\n  const menuUrl = urlStart + 'data/menu.json';\n  const menuResponse = await fetch(menuUrl).catch(e => {\n    return e;\n  });\n  const menuData = await menuResponse.json();\n\n  return menuData;\n};\n\nexport const getFullUrl = (urlEnd = '') => {\n  if (urlEnd.includes('http')) {\n    return urlEnd;\n  }\n\n  if (urlEnd[0] === '/') {\n    urlEnd = urlEnd.replace('/', '');\n  }\n\n  return urlStart + urlEnd;\n};\n\nexport const getLogo = async menuColour => {\n  const logoLocation = getFullUrl(`data/logos/${menuColour || 'red'}.json`);\n  const logoResponse = await fetch(logoLocation).catch(e => {\n    return e;\n  });\n  const logoData = await logoResponse.json();\n  const logoUrl = getFullUrl(logoData.image);\n\n  return logoUrl;\n};\n\nexport const getData = async pageName => {\n  const pageUrl = urlStart + pageName;\n  const response = await fetch(pageUrl);\n\n  if (!response.ok) {\n    return new Error('something messed up');\n  }\n\n  const pageData = await response.json();\n\n  return pageData;\n};\n\nexport const getResizedImageUrl = url => {\n  if (!url) {\n    return;\n  }\n\n  const pageWidth = window.innerWidth;\n\n  if (pageWidth < 768) {\n    return url.split('uploads/').join('uploads/mobile/');\n  } else if (pageWidth < 991) {\n    return url.split('uploads/').join('uploads/tablet/');\n  }\n\n  return url.split('uploads/').join('uploads/desktop/');\n};\n"
    ]
  },
  "metadata": {},
  "sourceType": "module"
}

{
  "ast": null,
  "code": "var __jsx = React.createElement;\nimport React from 'react';\nimport styled from 'styled-components';\nimport { slide as SlideMenu } from 'react-burger-menu';\nconst MenuLink = styled.a`\n  color: ${props => props.menuColour};\n  padding: 20px 25px;\n  display: inline-block;\n  text-decoration: none;\n`;\n\nconst MenuItem = ({\n  menuItem,\n  menuColour\n}) => __jsx(\"div\", {\n  key: menuItem.title\n}, __jsx(MenuLink, {\n  href: menuItem.link,\n  menuColour: menuColour\n}, menuItem.title));\n\nconst MobileMenu = ({\n  menuItems = [],\n  menuColour,\n  iconUrl,\n  isOpen,\n  handleStateChange\n}) => {\n  const styles = {\n    bmBurgerButton: {\n      display: 'none'\n    },\n    bmBurgerBars: {\n      background: menuColour,\n      height: '3px'\n    },\n    bmCrossButton: {\n      height: '24px',\n      width: '24px'\n    },\n    bmCross: {\n      background: menuColour\n    },\n    bmMenu: {\n      background: 'white',\n      padding: '2.5em 1.5em 0',\n      fontSize: '1.15em'\n    },\n    bmMorphShape: {\n      fill: '#373a47'\n    },\n    bmItemList: {\n      color: menuColour,\n      padding: '0.8em'\n    },\n    bmItem: {\n      display: 'inline-block'\n    },\n    bmOverlay: {\n      background: 'rgba(0, 0, 0, 0.2)'\n    }\n  };\n  return __jsx(SlideMenu, {\n    styles: styles,\n    isOpen: isOpen,\n    onStateChange: state => handleStateChange(state)\n  }, menuItems.map((menuItem, id) => __jsx(MenuItem, {\n    menuItem: menuItem,\n    menuColour: menuColour,\n    key: id\n  })));\n};\n\nexport default MobileMenu;",
  "map": {
    "version": 3,
    "sources": ["/home/joe/dev/gateway/components/MobileMenu.js"],
    "names": [
      "React",
      "styled",
      "slide",
      "SlideMenu",
      "MenuLink",
      "a",
      "props",
      "menuColour",
      "MenuItem",
      "menuItem",
      "title",
      "link",
      "MobileMenu",
      "menuItems",
      "iconUrl",
      "isOpen",
      "handleStateChange",
      "styles",
      "bmBurgerButton",
      "display",
      "bmBurgerBars",
      "background",
      "height",
      "bmCrossButton",
      "width",
      "bmCross",
      "bmMenu",
      "padding",
      "fontSize",
      "bmMorphShape",
      "fill",
      "bmItemList",
      "color",
      "bmItem",
      "bmOverlay",
      "state",
      "map",
      "id"
    ],
    "mappings": ";AAAA,OAAOA,KAAP,MAAkB,OAAlB;AACA,OAAOC,MAAP,MAAmB,mBAAnB;AACA,SAASC,KAAK,IAAIC,SAAlB,QAAmC,mBAAnC;AAEA,MAAMC,QAAQ,GAAGH,MAAM,CAACI,CAAE;WACfC,KAAK,IAAIA,KAAK,CAACC,UAAW;;;;CADrC;;AAOA,MAAMC,QAAQ,GAAG,CAAC;AAAEC,EAAAA,QAAF;AAAYF,EAAAA;AAAZ,CAAD,KACf;AAAK,EAAA,GAAG,EAAEE,QAAQ,CAACC;AAAnB,GACE,MAAC,QAAD;AAAU,EAAA,IAAI,EAAED,QAAQ,CAACE,IAAzB;AAA+B,EAAA,UAAU,EAAEJ;AAA3C,GACGE,QAAQ,CAACC,KADZ,CADF,CADF;;AAQA,MAAME,UAAU,GAAG,CAAC;AAClBC,EAAAA,SAAS,GAAG,EADM;AAElBN,EAAAA,UAFkB;AAGlBO,EAAAA,OAHkB;AAIlBC,EAAAA,MAJkB;AAKlBC,EAAAA;AALkB,CAAD,KAMb;AACJ,QAAMC,MAAM,GAAG;AACbC,IAAAA,cAAc,EAAE;AACdC,MAAAA,OAAO,EAAE;AADK,KADH;AAIbC,IAAAA,YAAY,EAAE;AACZC,MAAAA,UAAU,EAAEd,UADA;AAEZe,MAAAA,MAAM,EAAE;AAFI,KAJD;AAQbC,IAAAA,aAAa,EAAE;AACbD,MAAAA,MAAM,EAAE,MADK;AAEbE,MAAAA,KAAK,EAAE;AAFM,KARF;AAYbC,IAAAA,OAAO,EAAE;AACPJ,MAAAA,UAAU,EAAEd;AADL,KAZI;AAebmB,IAAAA,MAAM,EAAE;AACNL,MAAAA,UAAU,EAAE,OADN;AAENM,MAAAA,OAAO,EAAE,eAFH;AAGNC,MAAAA,QAAQ,EAAE;AAHJ,KAfK;AAoBbC,IAAAA,YAAY,EAAE;AACZC,MAAAA,IAAI,EAAE;AADM,KApBD;AAuBbC,IAAAA,UAAU,EAAE;AACVC,MAAAA,KAAK,EAAEzB,UADG;AAEVoB,MAAAA,OAAO,EAAE;AAFC,KAvBC;AA2BbM,IAAAA,MAAM,EAAE;AACNd,MAAAA,OAAO,EAAE;AADH,KA3BK;AA8Bbe,IAAAA,SAAS,EAAE;AACTb,MAAAA,UAAU,EAAE;AADH;AA9BE,GAAf;AAmCA,SACE,MAAC,SAAD;AACE,IAAA,MAAM,EAAEJ,MADV;AAEE,IAAA,MAAM,EAAEF,MAFV;AAGE,IAAA,aAAa,EAAEoB,KAAK,IAAInB,iBAAiB,CAACmB,KAAD;AAH3C,KAKGtB,SAAS,CAACuB,GAAV,CAAc,CAAC3B,QAAD,EAAW4B,EAAX,KACb,MAAC,QAAD;AAAU,IAAA,QAAQ,EAAE5B,QAApB;AAA8B,IAAA,UAAU,EAAEF,UAA1C;AAAsD,IAAA,GAAG,EAAE8B;AAA3D,IADD,CALH,CADF;AAWD,CArDD;;AAuDA,eAAezB,UAAf",
    "sourcesContent": [
      "import React from 'react';\nimport styled from 'styled-components';\nimport { slide as SlideMenu } from 'react-burger-menu';\n\nconst MenuLink = styled.a`\n  color: ${props => props.menuColour};\n  padding: 20px 25px;\n  display: inline-block;\n  text-decoration: none;\n`;\n\nconst MenuItem = ({ menuItem, menuColour }) => (\n  <div key={menuItem.title}>\n    <MenuLink href={menuItem.link} menuColour={menuColour}>\n      {menuItem.title}\n    </MenuLink>\n  </div>\n);\n\nconst MobileMenu = ({\n  menuItems = [],\n  menuColour,\n  iconUrl,\n  isOpen,\n  handleStateChange\n}) => {\n  const styles = {\n    bmBurgerButton: {\n      display: 'none'\n    },\n    bmBurgerBars: {\n      background: menuColour,\n      height: '3px'\n    },\n    bmCrossButton: {\n      height: '24px',\n      width: '24px'\n    },\n    bmCross: {\n      background: menuColour\n    },\n    bmMenu: {\n      background: 'white',\n      padding: '2.5em 1.5em 0',\n      fontSize: '1.15em'\n    },\n    bmMorphShape: {\n      fill: '#373a47'\n    },\n    bmItemList: {\n      color: menuColour,\n      padding: '0.8em'\n    },\n    bmItem: {\n      display: 'inline-block'\n    },\n    bmOverlay: {\n      background: 'rgba(0, 0, 0, 0.2)'\n    }\n  };\n\n  return (\n    <SlideMenu\n      styles={styles}\n      isOpen={isOpen}\n      onStateChange={state => handleStateChange(state)}\n    >\n      {menuItems.map((menuItem, id) => (\n        <MenuItem menuItem={menuItem} menuColour={menuColour} key={id} />\n      ))}\n    </SlideMenu>\n  );\n};\n\nexport default MobileMenu;\n"
    ]
  },
  "metadata": {},
  "sourceType": "module"
}

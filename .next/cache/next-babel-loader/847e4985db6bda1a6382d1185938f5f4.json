{
  "ast": null,
  "code": "import _taggedTemplateLiteral from \"@babel/runtime/helpers/esm/taggedTemplateLiteral\";\nvar __jsx = React.createElement;\n\nfunction _templateObject7() {\n  var data = _taggedTemplateLiteral([\"\\n  background: \", \";\\n\\n  @media screen and (min-width: 991px) {\\n    float: right;\\n    width: 40%;\\n    height: 500px;\\n    margin-bottom: 20px;\\n  }\\n\"]);\n\n  _templateObject7 = function _templateObject7() {\n    return data;\n  };\n\n  return data;\n}\n\nfunction _templateObject6() {\n  var data = _taggedTemplateLiteral([\"\\n  background-color: \", \";\\n  color: white;\\n  padding: 0 35px 35px;\\n\\n  @media screen and (min-width: 991px) {\\n    padding-bottom: 154px;\\n    margin-bottom: 20px;\\n  }\\n\"]);\n\n  _templateObject6 = function _templateObject6() {\n    return data;\n  };\n\n  return data;\n}\n\nfunction _templateObject5() {\n  var data = _taggedTemplateLiteral([\"\\n  color: white;\\n\"]);\n\n  _templateObject5 = function _templateObject5() {\n    return data;\n  };\n\n  return data;\n}\n\nfunction _templateObject4() {\n  var data = _taggedTemplateLiteral([\"\\n  color: \", \";\\n\"]);\n\n  _templateObject4 = function _templateObject4() {\n    return data;\n  };\n\n  return data;\n}\n\nfunction _templateObject3() {\n  var data = _taggedTemplateLiteral([\"\\n  border-bottom: 2px solid white;\\n  padding-bottom: 20px;\\n  margin-bottom: 20px;\\n\"]);\n\n  _templateObject3 = function _templateObject3() {\n    return data;\n  };\n\n  return data;\n}\n\nfunction _templateObject2() {\n  var data = _taggedTemplateLiteral([\"\\n  padding: 35px;\\n  background-color: \", \";\\n  color: white;\\n  line-height: 1.3em;\\n\"]);\n\n  _templateObject2 = function _templateObject2() {\n    return data;\n  };\n\n  return data;\n}\n\nfunction _templateObject() {\n  var data = _taggedTemplateLiteral([\"\\n  padding: 20px 35px;\\n  color: \", \";\\n  background: white;\\n\"]);\n\n  _templateObject = function _templateObject() {\n    return data;\n  };\n\n  return data;\n}\n\nimport React, { useState, useEffect } from 'react';\nimport moment from 'moment';\nimport Link from 'next/link';\nimport styled from 'styled-components';\nimport { getData } from '../helpers';\nvar H3 = styled.h3(_templateObject(), function (props) {\n  return props.colour;\n});\nvar UL = styled.ul(_templateObject2(), function (props) {\n  return props.colour;\n});\nvar LI = styled.li(_templateObject3());\nvar P = styled.p(_templateObject4(), function (props) {\n  return props.colour;\n});\nvar StyledLink = styled.a(_templateObject5());\nvar MoreEvents = styled.div(_templateObject6(), function (props) {\n  return props.colour;\n});\nvar EventsWrapper = styled.div(_templateObject7(), function (props) {\n  return props.colour;\n});\n\nvar SimpleEvents = function SimpleEvents(_ref) {\n  var colour = _ref.colour,\n      colourLight = _ref.colourLight;\n\n  var _useState = useState([]),\n      loading = _useState[0],\n      setLoading = _useState[1];\n\n  var _useState2 = useState([]),\n      events = _useState2[0],\n      setEvents = _useState2[1];\n\n  useEffect(function () {\n    getData('data/events/index.json').then(function (data) {\n      var events = Object.values(data).map(function (event) {\n        return event.data;\n      });\n      setEvents(events.filter(function (event) {\n        return event.dateTime;\n      }).sort(function (a, b) {\n        return moment(a.dateTime).isAfter(b.dateTime) ? 1 : -1;\n      }).filter(function (event) {\n        return moment().isBefore(event.dateTime);\n      }).slice(0, 3));\n      setLoading(false);\n    });\n  }, []);\n  if (loading) return __jsx(\"div\", null);\n  return __jsx(EventsWrapper, {\n    colour: colourLight\n  }, __jsx(H3, {\n    colour: colour\n  }, \"Events\"), __jsx(UL, {\n    colour: colourLight\n  }, events.map(function (event) {\n    return __jsx(LI, {\n      key: event.title\n    }, __jsx(Link, {\n      href: \"/events/\".concat(event.title)\n    }, __jsx(StyledLink, null, __jsx(P, {\n      colour: colour\n    }, moment(event.dateTime).format('dddd MMM Do YYYY')), __jsx(\"p\", null, event.title.split('-').map(function (word) {\n      return word[0].toUpperCase() + word.substr(1);\n    }).join(' ')), __jsx(\"p\", null, moment(event.dateTime).format('kk:mm')))));\n  })), __jsx(MoreEvents, {\n    colour: colourLight\n  }, __jsx(Link, {\n    href: \"/events\"\n  }, __jsx(StyledLink, null, \"More Events\"))));\n};\n\nexport default SimpleEvents;",
  "map": null,
  "metadata": {},
  "sourceType": "module"
}

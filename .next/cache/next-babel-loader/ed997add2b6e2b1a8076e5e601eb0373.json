{
  "ast": null,
  "code": "import _slicedToArray from \"@babel/runtime/helpers/esm/slicedToArray\";\nimport _taggedTemplateLiteral from \"@babel/runtime/helpers/esm/taggedTemplateLiteral\";\n\nvar _this = this,\n    _jsxFileName = \"/home/joe/dev/gateway/pages/events/[id].js\";\n\nvar __jsx = React.createElement;\n\nfunction _templateObject6() {\n  var data = _taggedTemplateLiteral([\"\\n  p {\\n    margin-bottom: 1em;\\n  }\\n\"]);\n\n  _templateObject6 = function _templateObject6() {\n    return data;\n  };\n\n  return data;\n}\n\nfunction _templateObject5() {\n  var data = _taggedTemplateLiteral([\"\\n  color: \", \";\\n  display: inline-block;\\n  border: 3px solid \", \";\\n  padding: 10px;\\n  border-radius: 5px;\\n  margin-top: 10px;\\n\"]);\n\n  _templateObject5 = function _templateObject5() {\n    return data;\n  };\n\n  return data;\n}\n\nfunction _templateObject4() {\n  var data = _taggedTemplateLiteral([\"\\n  padding: 20px;\\n  background-color: \", \";\\n  color: white;\\n  line-height: 1.3em;\\n  margin-bottom: 60px;\\n\\n  @media screen and (min-width: 991px) {\\n    float: right;\\n    width: calc(60% - 40px);\\n  }\\n\\n  li {\\n    list-style: inside;\\n    margin-bottom: 10px;\\n  }\\n\"]);\n\n  _templateObject4 = function _templateObject4() {\n    return data;\n  };\n\n  return data;\n}\n\nfunction _templateObject3() {\n  var data = _taggedTemplateLiteral([\"\\n  padding: 20px;\\n  background-color: \", \";\\n  color: white;\\n  line-height: 1.3em;\\n  margin-bottom: 60px;\\n\\n  @media screen and (min-width: 991px) {\\n    float: left;\\n    width: calc(40% - 40px);\\n  }\\n\"]);\n\n  _templateObject3 = function _templateObject3() {\n    return data;\n  };\n\n  return data;\n}\n\nfunction _templateObject2() {\n  var data = _taggedTemplateLiteral([\"\\n  font-size: 30px;\\n  line-height: 1.5em;\\n  color: #fff;\\n  text-align: center;\\n  position: absolute;\\n  top: 50%;\\n  left: 0;\\n  right: 0;\\n  transform: translateY(-50%);\\n\\n  @media screen and (min-width: 768px) {\\n    font-size: 90px;\\n  }\\n\"]);\n\n  _templateObject2 = function _templateObject2() {\n    return data;\n  };\n\n  return data;\n}\n\nfunction _templateObject() {\n  var data = _taggedTemplateLiteral([\"\\n  height: 200px;\\n  position: relative;\\n  background-color: \", \";\\n  color: white;\\n  text-decoration: none;\\n\\n  @media screen and (min-width: 768px) {\\n    height: 500px;\\n  }\\n\"]);\n\n  _templateObject = function _templateObject() {\n    return data;\n  };\n\n  return data;\n}\n\nimport React, { useState, useEffect } from 'react';\nimport styled from 'styled-components';\nimport moment from 'moment';\nimport { useRouter } from 'next/router';\nimport Head from 'next/head';\nimport { markdown } from 'markdown';\nimport Link from 'next/link';\nimport Header from '../../templates/Header';\nimport Footer from '../../templates/Footer';\nimport HeaderContainer from '../../components/HeaderContainer';\nimport Container from '../../components/Container';\nimport Image from '../../components/Image';\nimport Clearfix from '../../components/Clearfix';\nimport { getMenuColour, getFullUrl, getData, getAllColours } from '../../helpers';\nvar Subtitle = styled.div(_templateObject(), function (props) {\n  return props.colour;\n});\nvar Title = styled.h2(_templateObject2());\nvar ContentLeft = styled.div(_templateObject3(), function (props) {\n  return props.colour;\n});\nvar ContentRight = styled.div(_templateObject4(), function (props) {\n  return props.colour;\n});\nvar StyledLink = styled.a(_templateObject5(), function (props) {\n  return props.colour;\n}, function (props) {\n  return props.colour;\n});\nvar Article = styled.div(_templateObject6());\n\nvar Event = function Event() {\n  var _useState = useState(true),\n      loading = _useState[0],\n      setLoading = _useState[1];\n\n  var _useState2 = useState(''),\n      title = _useState2[0],\n      setTitle = _useState2[1];\n\n  var _useState3 = useState(''),\n      image = _useState3[0],\n      setImage = _useState3[1];\n\n  var _useState4 = useState(''),\n      dateTime = _useState4[0],\n      setDateTime = _useState4[1];\n\n  var _useState5 = useState(''),\n      time = _useState5[0],\n      setTime = _useState5[1];\n\n  var _useState6 = useState(''),\n      article = _useState6[0],\n      setArticle = _useState6[1];\n\n  var _useState7 = useState(''),\n      colour = _useState7[0],\n      setColour = _useState7[1];\n\n  var _useState8 = useState(''),\n      colourHex = _useState8[0],\n      setColourHex = _useState8[1];\n\n  var _useState9 = useState(''),\n      colourHexLight = _useState9[0],\n      setColourHexLight = _useState9[1];\n\n  var _useState10 = useState(''),\n      pathname = _useState10[0],\n      setPathname = _useState10[1];\n\n  var router = useRouter();\n  var id = router.query.id;\n  useEffect(function () {\n    if (!id) return;\n    setPathname(id.split(' ').join('-').split('%20').join('-').toLowerCase());\n  }, [id]);\n  useEffect(function () {\n    getData(\"data/\".concat(pathname, \".json\")).then(function (data) {\n      var _getAllColours = getAllColours(getMenuColour(data)),\n          _getAllColours2 = _slicedToArray(_getAllColours, 3),\n          colour = _getAllColours2[0],\n          colourHex = _getAllColours2[1],\n          colourHexLight = _getAllColours2[2];\n\n      setColour(colour);\n      setColourHex(colourHex);\n      setColourHexLight(colourHexLight);\n      setDateTime(moment(data.dateTime).format('dddd DD MMM YYYY'));\n      setTime(moment(data.dateTime).format('HH:mm'));\n      setTitle(data.title);\n      setImage(data.image);\n      setArticle(data.article);\n      setLoading(false);\n    });\n  }, []);\n  if (!id) return null;\n  if (loading) return __jsx(\"div\", {\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 140,\n      columnNumber: 23\n    }\n  });\n  return __jsx(React.Fragment, {\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 143,\n      columnNumber: 5\n    }\n  }, __jsx(Head, {\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 144,\n      columnNumber: 7\n    }\n  }, __jsx(\"title\", {\n    key: \"title\",\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 145,\n      columnNumber: 9\n    }\n  }, title, \" - Gateway Church, York\")), __jsx(Header, {\n    colour: colour,\n    colourHex: colourHex,\n    colourHexLight: colourHexLight,\n    Header: HeaderContainer,\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 147,\n      columnNumber: 7\n    }\n  }), __jsx(\"main\", {\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 153,\n      columnNumber: 7\n    }\n  }, __jsx(Subtitle, {\n    colour: colourHex,\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 154,\n      columnNumber: 9\n    }\n  }, __jsx(Image, {\n    url: getFullUrl(image),\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 155,\n      columnNumber: 11\n    }\n  }), __jsx(Title, {\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 156,\n      columnNumber: 11\n    }\n  }, title)), __jsx(Container, {\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 158,\n      columnNumber: 9\n    }\n  }, __jsx(ContentLeft, {\n    colour: colourHexLight,\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 159,\n      columnNumber: 11\n    }\n  }, __jsx(\"div\", {\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 160,\n      columnNumber: 13\n    }\n  }, dateTime), __jsx(\"div\", {\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 161,\n      columnNumber: 13\n    }\n  }, time)), __jsx(ContentRight, {\n    colour: colourHex,\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 163,\n      columnNumber: 11\n    }\n  }, article && __jsx(React.Fragment, null, __jsx(Article, {\n    dangerouslySetInnerHTML: {\n      __html: markdown.toHTML(article)\n    },\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 166,\n      columnNumber: 17\n    }\n  }), __jsx(Link, {\n    href: \"/events\",\n    passHref: true,\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 169,\n      columnNumber: 17\n    }\n  }, __jsx(StyledLink, {\n    colour: colourHexLight,\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 170,\n      columnNumber: 19\n    }\n  }, \"View a list of all events\")))), __jsx(Clearfix, {\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 177,\n      columnNumber: 11\n    }\n  }))), __jsx(Footer, {\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 180,\n      columnNumber: 7\n    }\n  }));\n};\n\nexport default Event;",
  "map": {
    "version": 3,
    "sources": ["/home/joe/dev/gateway/pages/events/[id].js"],
    "names": [
      "React",
      "useState",
      "useEffect",
      "styled",
      "moment",
      "useRouter",
      "Head",
      "markdown",
      "Link",
      "Header",
      "Footer",
      "HeaderContainer",
      "Container",
      "Image",
      "Clearfix",
      "getMenuColour",
      "getFullUrl",
      "getData",
      "getAllColours",
      "Subtitle",
      "div",
      "props",
      "colour",
      "Title",
      "h2",
      "ContentLeft",
      "ContentRight",
      "StyledLink",
      "a",
      "Article",
      "Event",
      "loading",
      "setLoading",
      "title",
      "setTitle",
      "image",
      "setImage",
      "dateTime",
      "setDateTime",
      "time",
      "setTime",
      "article",
      "setArticle",
      "setColour",
      "colourHex",
      "setColourHex",
      "colourHexLight",
      "setColourHexLight",
      "pathname",
      "setPathname",
      "router",
      "id",
      "query",
      "split",
      "join",
      "toLowerCase",
      "then",
      "data",
      "format",
      "__html",
      "toHTML"
    ],
    "mappings": "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",
    "sourcesContent": [
      "import React, {useState, useEffect} from 'react';\nimport styled from 'styled-components';\nimport moment from 'moment';\nimport {useRouter} from 'next/router';\nimport Head from 'next/head';\nimport {markdown} from 'markdown';\nimport Link from 'next/link';\n\nimport Header from '../../templates/Header';\nimport Footer from '../../templates/Footer';\nimport HeaderContainer from '../../components/HeaderContainer';\nimport Container from '../../components/Container';\nimport Image from '../../components/Image';\nimport Clearfix from '../../components/Clearfix';\n\nimport {getMenuColour, getFullUrl, getData, getAllColours} from '../../helpers';\n\nconst Subtitle = styled.div`\n  height: 200px;\n  position: relative;\n  background-color: ${props => props.colour};\n  color: white;\n  text-decoration: none;\n\n  @media screen and (min-width: 768px) {\n    height: 500px;\n  }\n`;\n\nconst Title = styled.h2`\n  font-size: 30px;\n  line-height: 1.5em;\n  color: #fff;\n  text-align: center;\n  position: absolute;\n  top: 50%;\n  left: 0;\n  right: 0;\n  transform: translateY(-50%);\n\n  @media screen and (min-width: 768px) {\n    font-size: 90px;\n  }\n`;\n\nconst ContentLeft = styled.div`\n  padding: 20px;\n  background-color: ${props => props.colour};\n  color: white;\n  line-height: 1.3em;\n  margin-bottom: 60px;\n\n  @media screen and (min-width: 991px) {\n    float: left;\n    width: calc(40% - 40px);\n  }\n`;\n\nconst ContentRight = styled.div`\n  padding: 20px;\n  background-color: ${props => props.colour};\n  color: white;\n  line-height: 1.3em;\n  margin-bottom: 60px;\n\n  @media screen and (min-width: 991px) {\n    float: right;\n    width: calc(60% - 40px);\n  }\n\n  li {\n    list-style: inside;\n    margin-bottom: 10px;\n  }\n`;\n\nconst StyledLink = styled.a`\n  color: ${props => props.colour};\n  display: inline-block;\n  border: 3px solid ${props => props.colour};\n  padding: 10px;\n  border-radius: 5px;\n  margin-top: 10px;\n`;\n\nconst Article = styled.div`\n  p {\n    margin-bottom: 1em;\n  }\n`;\n\nconst Event = () => {\n  const [loading, setLoading] = useState(true);\n  const [title, setTitle] = useState('');\n  const [image, setImage] = useState('');\n  const [dateTime, setDateTime] = useState('');\n  const [time, setTime] = useState('');\n  const [article, setArticle] = useState('');\n  const [colour, setColour] = useState('');\n  const [colourHex, setColourHex] = useState('');\n  const [colourHexLight, setColourHexLight] = useState('');\n  const [pathname, setPathname] = useState('');\n  const router = useRouter();\n\n  const {\n    query: {id}\n  } = router;\n\n  useEffect(() => {\n    if (!id) return;\n    setPathname(\n      id\n        .split(' ')\n        .join('-')\n        .split('%20')\n        .join('-')\n        .toLowerCase()\n    );\n  }, [id]);\n\n  useEffect(() => {\n    getData(`data/${pathname}.json`).then(data => {\n      const [colour, colourHex, colourHexLight] = getAllColours(\n        getMenuColour(data)\n      );\n      setColour(colour);\n      setColourHex(colourHex);\n      setColourHexLight(colourHexLight);\n      setDateTime(moment(data.dateTime).format('dddd DD MMM YYYY'));\n      setTime(moment(data.dateTime).format('HH:mm'));\n      setTitle(data.title);\n      setImage(data.image);\n      setArticle(data.article);\n      setLoading(false);\n    });\n  }, []);\n\n  if (!id) return null;\n\n  if (loading) return <div />;\n\n  return (\n    <React.Fragment>\n      <Head>\n        <title key=\"title\">{title} - Gateway Church, York</title>\n      </Head>\n      <Header\n        colour={colour}\n        colourHex={colourHex}\n        colourHexLight={colourHexLight}\n        Header={HeaderContainer}\n      />\n      <main>\n        <Subtitle colour={colourHex}>\n          <Image url={getFullUrl(image)} />\n          <Title>{title}</Title>\n        </Subtitle>\n        <Container>\n          <ContentLeft colour={colourHexLight}>\n            <div>{dateTime}</div>\n            <div>{time}</div>\n          </ContentLeft>\n          <ContentRight colour={colourHex}>\n            {article && (\n              <>\n                <Article\n                  dangerouslySetInnerHTML={{__html: markdown.toHTML(article)}}\n                />\n                <Link href=\"/events\" passHref>\n                  <StyledLink colour={colourHexLight}>\n                    View a list of all events\n                  </StyledLink>\n                </Link>\n              </>\n            )}\n          </ContentRight>\n          <Clearfix />\n        </Container>\n      </main>\n      <Footer />\n    </React.Fragment>\n  );\n};\n\nexport default Event;\n"
    ]
  },
  "metadata": {},
  "sourceType": "module"
}

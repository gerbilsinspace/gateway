{
  "ast": null,
  "code": "import _slicedToArray from \"@babel/runtime/helpers/esm/slicedToArray\";\nimport _taggedTemplateLiteral from \"@babel/runtime/helpers/esm/taggedTemplateLiteral\";\nvar __jsx = React.createElement;\n\nfunction _templateObject() {\n  var data = _taggedTemplateLiteral([\"\\n  line-height: 1.5em;\\n\\n  p {\\n    margin-bottom: 20px;\\n  }\\n\\n  a {\\n    color: \", \";\\n  }\\n\"]);\n\n  _templateObject = function _templateObject() {\n    return data;\n  };\n\n  return data;\n}\n\nimport React, { useState, useEffect } from 'react';\nimport styled from 'styled-components';\nimport { useRouter } from 'next/router';\nimport Head from 'next/head';\nimport { format } from 'date-fns';\nimport { markdown } from 'markdown';\nimport { getData, getMenuColour, getAllColours, getFullUrl } from '../../helpers';\nimport Header from '../../templates/Header';\nimport HeaderContainer from '../../components/HeaderContainer';\nimport Footer from '../../templates/Footer';\nimport ImageWrapper from '../../components/ImageWrapper';\nimport Image from '../../components/Image';\nimport Container from '../../components/Container';\nimport Audio from '../../components/Audio';\nimport H1 from '../../components/H1Word';\nimport H2 from '../../components/H2Word';\nimport P from '../../components/PWord';\nimport Deck from '../../components/DeckWord';\nimport StyledDate from '../../components/DateWord';\nimport Link from '../../components/LinkWord';\nvar WordText = styled.div(_templateObject(), function (props) {\n  return props.colour;\n});\n\nvar Word = function Word() {\n  var _useState = useState(true),\n      loading = _useState[0],\n      setLoading = _useState[1];\n\n  var _useState2 = useState(''),\n      title = _useState2[0],\n      setTitle = _useState2[1];\n\n  var _useState3 = useState(''),\n      colour = _useState3[0],\n      setColour = _useState3[1];\n\n  var _useState4 = useState(''),\n      colourHex = _useState4[0],\n      setColourHex = _useState4[1];\n\n  var _useState5 = useState(''),\n      colourHexLight = _useState5[0],\n      setColourHexLight = _useState5[1];\n\n  var _useState6 = useState(''),\n      date = _useState6[0],\n      setDate = _useState6[1];\n\n  var _useState7 = useState(''),\n      subtitle = _useState7[0],\n      setSubtitle = _useState7[1];\n\n  var _useState8 = useState(''),\n      image = _useState8[0],\n      setImage = _useState8[1];\n\n  var _useState9 = useState(''),\n      audioFile = _useState9[0],\n      setAudioFile = _useState9[1];\n\n  var _useState10 = useState(''),\n      deck = _useState10[0],\n      setDeck = _useState10[1];\n\n  var _useState11 = useState(''),\n      youtubeLink = _useState11[0],\n      setYoutubeLink = _useState11[1];\n\n  var _useState12 = useState(''),\n      file = _useState12[0],\n      setFile = _useState12[1];\n\n  var _useState13 = useState([]),\n      authors = _useState13[0],\n      setAuthors = _useState13[1];\n\n  var _useState14 = useState(''),\n      pathname = _useState14[0],\n      setPathname = _useState14[1];\n\n  var router = useRouter();\n  var id = router.query.id;\n  useEffect(function () {\n    if (!id) return;\n    setPathname(id.split(' ').join('-').split('%20').join('-').toLowerCase());\n  }, [id]);\n  useEffect(function () {\n    if (pathname.length === 0) return;\n    var id = pathname.split(' ').join('-').split(':').join('').toLowerCase();\n    getData(\"data/words/\".concat(id, \".json\")).then(function (data) {\n      var audioFile = data.audioFile;\n\n      if (!audioFile || !audioFile.includes('.mp3')) {\n        audioFile = '';\n      } else {\n        audioFile = getFullUrl(audioFile);\n      }\n\n      setTitle(data.title);\n\n      var _getAllColours = getAllColours(getMenuColour(data)),\n          _getAllColours2 = _slicedToArray(_getAllColours, 3),\n          colour = _getAllColours2[0],\n          colourHex = _getAllColours2[1],\n          colourHexLight = _getAllColours2[2];\n\n      setColour(colour);\n      setColourHex(colourHex);\n      setColourHexLight(colourHexLight);\n      setDate(data.date);\n      setSubtitle(data.subtitle);\n      setImage(data.image);\n      setAudioFile(audioFile);\n      setDeck(data.deck);\n      setYoutubeLink(data.youtubeLink);\n      setFile(data.file);\n      setAuthors(data.authors);\n      setLoading(false);\n    });\n  }, [router, pathname]);\n  if (!id) return null;\n  if (loading) return null;\n  return __jsx(React.Fragment, null, __jsx(Head, null, __jsx(\"title\", {\n    key: \"title\"\n  }, title, \" - Gateway Church, York\")), __jsx(Header, {\n    colour: colour,\n    colourHex: colourHex,\n    colourHexLight: colourHexLight,\n    Header: HeaderContainer\n  }), __jsx(Deck, {\n    colour: colourHexLight\n  }, __jsx(Container, null, __jsx(StyledDate, {\n    colour: colourHex\n  }, date && format(date, 'EEEE do LLLL yyyy'), ' ', authors && authors.map(function (_ref) {\n    var author = _ref.author;\n    return __jsx(React.Fragment, null, ' - ', __jsx(Link, {\n      colour: colourHex,\n      href: '/people/' + author.toLowerCase().split(' ').join('-')\n    }, author.split('-').map(function (word) {\n      return word[0].toUpperCase() + word.substr(1);\n    }).join(' ')));\n  })), __jsx(H1, null, title && title.split('-').map(function (word) {\n    return word[0].toUpperCase() + word.substr(1);\n  }).join(' ')), __jsx(H2, null, subtitle))), __jsx(Container, null, image && __jsx(ImageWrapper, null, __jsx(Image, {\n    url: getFullUrl() + image.slice(1)\n  })), audioFile && __jsx(P, null, __jsx(Audio, {\n    url: audioFile,\n    colour: colourHex,\n    lightColour: colourHexLight\n  })), file && file.endsWith('mp3') && __jsx(P, null, __jsx(Audio, {\n    url: getFullUrl(file),\n    colour: colourHex,\n    lightColour: colourHexLight\n  })), deck && deck.startsWith('<') && __jsx(WordText, {\n    dangerouslySetInnerHTML: {\n      __html: deck\n    },\n    colour: colourHex\n  }), deck && !deck.startsWith('<') && __jsx(WordText, {\n    dangerouslySetInnerHTML: {\n      __html: markdown.toHTML(deck)\n    },\n    colour: colourHex\n  }), youtubeLink && __jsx(P, null, __jsx(Link, {\n    colour: colourHex,\n    href: youtubeLink\n  }, youtubeLink)), file && !file.includes('mp3') && __jsx(P, null, __jsx(Link, {\n    colour: colourHex,\n    href: getFullUrl(file)\n  }, file.replace('/uploads/', '')))), __jsx(Footer, null));\n};\n\nexport default Word;",
  "map": null,
  "metadata": {},
  "sourceType": "module"
}

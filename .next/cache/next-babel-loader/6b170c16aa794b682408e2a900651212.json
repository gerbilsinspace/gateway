{
  "ast": null,
  "code": "var __jsx = React.createElement;\nimport React, { useState, useEffect } from 'react';\nimport { format, compareAsc } from 'date-fns';\nimport Head from 'next/head';\nimport { useRouter } from 'next/router';\nimport Link from 'next/link';\nimport Header from '../../templates/Header';\nimport Footer from '../../templates/Footer';\nimport HeaderContainer from '../../components/HeaderContainer';\nimport PageSummary from '../../components/PageSummary';\nimport Image from '../../components/Image';\nimport Container from '../../components/Container';\nimport Clearfix from '../../components/Clearfix';\nimport StyledLink from '../../components/LinkWords';\nimport StyledText from '../../components/TextWords';\nimport StyledDate from '../../components/DateWords';\nimport Title from '../../components/H2Words';\nimport ReadMore from '../../components/ReadMoreWords';\nimport StyledTextContainer from '../../components/TextContainerWords';\nimport StyledHideOnMobile from '../../components/HideOnMobileWords';\nimport Word from '../../components/WordWords';\nimport Pagination from '../../components/Pagination';\nimport StyledPagination from '../../components/PaginationWords';\nimport Subtitle from '../../components/Subtitle';\nimport StyledImageWrapper from '../../components/ImageWrapperWords';\nimport { getData, getFullUrl, changeColourToHex, getMenuColour, getAllColours } from '../../helpers';\n\nconst Words = () => {\n  const {\n    0: loading,\n    1: setLoading\n  } = useState(true);\n  const {\n    0: colour,\n    1: setColour\n  } = useState('');\n  const {\n    0: colourHex,\n    1: setColourHex\n  } = useState('');\n  const {\n    0: colourHexLight,\n    1: setColourHexLight\n  } = useState('');\n  const {\n    0: header,\n    1: setHeader\n  } = useState('');\n  const {\n    0: image,\n    1: setImage\n  } = useState('');\n  const {\n    0: subtitle,\n    1: setSubtitle\n  } = useState('');\n  const {\n    0: title,\n    1: setTitle\n  } = useState('');\n  const {\n    0: maxPageCount,\n    1: setMaxPageCount\n  } = useState(0);\n  const {\n    0: words,\n    1: setWords\n  } = useState('');\n  const {\n    0: wordsCount,\n    1: setWordsCount\n  } = useState(0);\n  const {\n    0: currentPage,\n    1: setCurrentPage\n  } = useState('');\n  const router = useRouter();\n  useEffect(() => {\n    Promise.all([getData('data/words/index.json'), getData('data/pages/words.json')]).then(([data, wordsPageData]) => {\n      const currentPage = router && router.query && router.query.page || 1;\n      setCurrentPage(currentPage);\n      const [colour, colourHex, colourHexLight] = getAllColours(getMenuColour(data));\n      setColour(colour);\n      setColourHex(colourHex);\n      setColourHexLight(colourHexLight);\n      setHeader(wordsPageData.header);\n      setImage(getFullUrl(wordsPageData.header.image));\n      setSubtitle(wordsPageData.subtitle);\n      setTitle(wordsPageData.title);\n      let words = Object.values(data).map(word => word.data).filter(word => !!word.date).sort((a, b) => {\n        return compareAsc(new Date(b.date), new Date(a.date));\n      });\n      setWordsCount(words.length);\n      setWords(words.slice(currentPage * 10 - 10, currentPage * 10));\n      setMaxPageCount(Math.ceil(wordsCount / 10));\n      setLoading(false);\n    });\n  }, [router]);\n  if (loading) return __jsx(\"div\", null);\n\n  if (!words || words.length === 0) {\n    return __jsx(\"div\", null);\n  }\n\n  return __jsx(React.Fragment, null, __jsx(Head, null, __jsx(\"title\", {\n    key: \"title\"\n  }, \"Words - Gateway Church, York\")), __jsx(Header, {\n    colour: colour,\n    colourHex: colourHex,\n    colourHexLight: colourHexLight,\n    title: title,\n    image: image,\n    Header: HeaderContainer\n  }), subtitle && subtitle.subtitle && __jsx(PageSummary, {\n    color: colourHex\n  }, subtitle.subtitle), __jsx(Container, null, maxPageCount > 1 && __jsx(StyledPagination, {\n    color: colourHex\n  }, __jsx(Pagination, {\n    maxCount: maxPageCount,\n    currentPage: currentPage\n  })), __jsx(\"ul\", null, words.map(word => {\n    const authors = word.authors && word.authors.map(({\n      author\n    }) => author.trim()).filter(author => author);\n    return __jsx(Word, {\n      key: word.title\n    }, __jsx(Link, {\n      href: `/words/${word.slug}`,\n      passHref: true\n    }, __jsx(StyledLink, {\n      colour: changeColourToHex(word.colour, true)\n    }, __jsx(StyledTextContainer, null, __jsx(StyledText, null, __jsx(StyledDate, {\n      colour: changeColourToHex(word.colour)\n    }, format(word.date, 'EEEE do LLLL yyyy'), authors && authors.length > 0 && __jsx(React.Fragment, null, authors.map(author => __jsx(React.Fragment, {\n      key: author\n    }, ' - ', author.split('-').map(word => word[0].toUpperCase() + word.substr(1)).join(' '))))), __jsx(Title, null, word.title.split('-').map(word => word[0].toUpperCase() + word.substr(1)).join(' ')), __jsx(Subtitle, null, word.subtitle)), __jsx(ReadMore, {\n      colour: changeColourToHex(word.colour)\n    }, \"Read More +\")), __jsx(StyledHideOnMobile, null, __jsx(StyledImageWrapper, {\n      colour: changeColourToHex(word.colour),\n      marginBottom: 0\n    }, __jsx(Image, {\n      url: getFullUrl(word.image)\n    }))), __jsx(Clearfix, null))));\n  }))), __jsx(Footer, null));\n};\n\nexport default Words;",
  "map": null,
  "metadata": {},
  "sourceType": "module"
}

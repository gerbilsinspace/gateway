{
  "ast": null,
  "code": "import _taggedTemplateLiteral from \"@babel/runtime/helpers/esm/taggedTemplateLiteral\";\nvar __jsx = React.createElement;\n\nfunction _templateObject() {\n  var data = _taggedTemplateLiteral([\"\\n  color: \", \";\\n  padding: 20px 25px;\\n  display: inline-block;\\n  text-decoration: none;\\n\"]);\n\n  _templateObject = function _templateObject() {\n    return data;\n  };\n\n  return data;\n}\n\nimport React from 'react';\nimport styled from 'styled-components';\nimport { slide as SlideMenu } from 'react-burger-menu';\nvar MenuLink = styled.a(_templateObject(), function (props) {\n  return props.menuColour;\n});\n\nvar MenuItem = function MenuItem(_ref) {\n  var menuItem = _ref.menuItem,\n      menuColour = _ref.menuColour;\n  return __jsx(\"div\", {\n    key: menuItem.title\n  }, __jsx(MenuLink, {\n    href: menuItem.link,\n    menuColour: menuColour\n  }, menuItem.title));\n};\n\nvar MobileMenu = function MobileMenu(_ref2) {\n  var _ref2$menuItems = _ref2.menuItems,\n      menuItems = _ref2$menuItems === void 0 ? [] : _ref2$menuItems,\n      menuColour = _ref2.menuColour,\n      iconUrl = _ref2.iconUrl,\n      isOpen = _ref2.isOpen,\n      handleStateChange = _ref2.handleStateChange;\n  var styles = {\n    bmBurgerButton: {\n      display: 'none'\n    },\n    bmBurgerBars: {\n      background: menuColour,\n      height: '3px'\n    },\n    bmCrossButton: {\n      height: '24px',\n      width: '24px'\n    },\n    bmCross: {\n      background: menuColour\n    },\n    bmMenu: {\n      background: 'white',\n      padding: '2.5em 1.5em 0',\n      fontSize: '1.15em'\n    },\n    bmMorphShape: {\n      fill: '#373a47'\n    },\n    bmItemList: {\n      color: menuColour,\n      padding: '0.8em'\n    },\n    bmItem: {\n      display: 'inline-block'\n    },\n    bmOverlay: {\n      background: 'rgba(0, 0, 0, 0.2)'\n    }\n  };\n  return __jsx(SlideMenu, {\n    styles: styles,\n    isOpen: isOpen,\n    onStateChange: function onStateChange(state) {\n      return handleStateChange(state);\n    }\n  }, menuItems.map(function (menuItem, id) {\n    return __jsx(MenuItem, {\n      menuItem: menuItem,\n      menuColour: menuColour,\n      key: id\n    });\n  }));\n};\n\nexport default MobileMenu;",
  "map": null,
  "metadata": {},
  "sourceType": "module"
}

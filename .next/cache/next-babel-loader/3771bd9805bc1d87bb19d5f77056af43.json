{
  "ast": null,
  "code": "var __jsx = React.createElement;\nimport React, { useState, useEffect } from 'react';\nimport moment from 'moment';\nimport { Link } from '../router';\nimport styled from 'styled-components';\nimport { getData } from '../helpers';\nconst H3 = styled.h3`\n  padding: 20px 35px;\n  color: ${props => props.colour};\n  background: white;\n`;\nconst UL = styled.ul`\n  padding: 35px;\n  background-color: ${props => props.colour};\n  color: white;\n  line-height: 1.3em;\n`;\nconst LI = styled.li`\n  border-bottom: 2px solid white;\n  padding-bottom: 20px;\n  margin-bottom: 20px;\n`;\nconst P = styled.p`\n  color: ${props => props.colour};\n`;\nconst StyledLink = styled.a`\n  color: white;\n`;\nconst MoreEvents = styled.div`\n  background-color: ${props => props.colour};\n  color: white;\n  padding: 0 35px 35px;\n\n  @media screen and (min-width: 991px) {\n    padding-bottom: 154px;\n    margin-bottom: 20px;\n  }\n`;\nconst EventsWrapper = styled.div`\n  background: ${props => props.colour};\n\n  @media screen and (min-width: 991px) {\n    float: right;\n    width: 40%;\n    height: 500px;\n    margin-bottom: 20px;\n  }\n`;\n\nconst SimpleEvents = ({\n  colour,\n  colourLight\n}) => {\n  const {\n    0: loading,\n    1: setLoading\n  } = useState([]);\n  const {\n    0: events,\n    1: setEvents\n  } = useState([]);\n  useEffect(() => {\n    getData('data/events/index.json').then(data => {\n      const events = Object.values(data).map(event => event.data);\n      setEvents(events.filter(event => event.dateTime).sort((a, b) => moment(a.dateTime).isAfter(b.dateTime) ? 1 : -1).filter(event => moment().isBefore(event.dateTime)).slice(0, 3));\n      setLoading(false);\n    });\n  }, []);\n  if (loading) return __jsx(\"div\", null);\n  return __jsx(EventsWrapper, {\n    colour: colourLight\n  }, __jsx(H3, {\n    colour: colour\n  }, \"Events\"), __jsx(UL, {\n    colour: colourLight\n  }, events.map(event => __jsx(LI, {\n    key: event.title\n  }, __jsx(Link, {\n    href: `/events/${event.title}`\n  }, __jsx(StyledLink, null, __jsx(P, {\n    colour: colour\n  }, moment(event.dateTime).format('dddd MMM Do YYYY')), __jsx(\"p\", null, event.title.split('-').map(word => word[0].toUpperCase() + word.substr(1)).join(' ')), __jsx(\"p\", null, moment(event.dateTime).format('kk:mm'))))))), __jsx(MoreEvents, {\n    colour: colourLight\n  }, __jsx(Link, {\n    href: \"/events\"\n  }, __jsx(StyledLink, null, \"More Events\"))));\n};\n\nexport default SimpleEvents;",
  "map": null,
  "metadata": {},
  "sourceType": "module"
}
